/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/index"],{

/***/ "./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! next/dist/compiled/process */ \"./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSxxQ0FBcUMscUJBQU0saUZBQWlGLHFCQUFNLGtFQUFrRSxxQkFBTSxXQUFXLG1CQUFPLENBQUMsd0ZBQTRCOztBQUV6UCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzP2NhNjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX2dsb2JhbF9wcm9jZXNzLCBfZ2xvYmFsX3Byb2Nlc3MxO1xubW9kdWxlLmV4cG9ydHMgPSAoKF9nbG9iYWxfcHJvY2VzcyA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogX2dsb2JhbF9wcm9jZXNzLmVudikgJiYgdHlwZW9mICgoX2dsb2JhbF9wcm9jZXNzMSA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogX2dsb2JhbF9wcm9jZXNzMS5lbnYpID09PSBcIm9iamVjdFwiID8gZ2xvYmFsLnByb2Nlc3MgOiByZXF1aXJlKFwibmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3NcIik7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb2Nlc3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fcandacestewart%2Ffieldnodes-react%2Fpages%2Findex.tsx&page=%2F!":
/*!******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fcandacestewart%2Ffieldnodes-react%2Fpages%2Findex.tsx&page=%2F! ***!
  \******************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return __webpack_require__(/*! ./pages/index.tsx */ \"./pages/index.tsx\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD0lMkZVc2VycyUyRmNhbmRhY2VzdGV3YXJ0JTJGZmllbGRub2Rlcy1yZWFjdCUyRnBhZ2VzJTJGaW5kZXgudHN4JnBhZ2U9JTJGISIsIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLDRDQUFtQjtBQUMxQztBQUNBO0FBQ0EsT0FBTyxJQUFVO0FBQ2pCLE1BQU0sVUFBVTtBQUNoQjtBQUNBLE9BQU87QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/NGEwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAod2luZG93Ll9fTkVYVF9QID0gd2luZG93Ll9fTkVYVF9QIHx8IFtdKS5wdXNoKFtcbiAgICAgIFwiL1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gcmVxdWlyZShcIi4vcGFnZXMvaW5kZXgudHN4XCIpO1xuICAgICAgfVxuICAgIF0pO1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbiAoKSB7XG4gICAgICAgIHdpbmRvdy5fX05FWFRfUC5wdXNoKFtcIi9cIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fcandacestewart%2Ffieldnodes-react%2Fpages%2Findex.tsx&page=%2F!\n"));

/***/ }),

/***/ "./node_modules/styled-jsx/dist/index/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/styled-jsx/dist/index/index.js ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n__webpack_require__(/*! client-only */ \"./node_modules/next/dist/compiled/client-only/index.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nfunction _interopDefaultLegacy(e) {\n    return e && typeof e === \"object\" && \"default\" in e ? e : {\n        \"default\": e\n    };\n}\nvar React__default = /*#__PURE__*/ _interopDefaultLegacy(React);\n_c = React__default;\n/*\nBased on Glamor's sheet\nhttps://github.com/threepointone/glamor/blob/667b480d31b3721a905021b26e1290ce92ca2879/src/sheet.js\n*/ function _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nvar isProd = typeof process !== \"undefined\" && process.env && \"development\" === \"production\";\nvar isString = function(o) {\n    return Object.prototype.toString.call(o) === \"[object String]\";\n};\nvar StyleSheet = /*#__PURE__*/ function() {\n    function StyleSheet(param) {\n        var ref = param === void 0 ? {} : param, _name = ref.name, name = _name === void 0 ? \"stylesheet\" : _name, _optimizeForSpeed = ref.optimizeForSpeed, optimizeForSpeed = _optimizeForSpeed === void 0 ? isProd : _optimizeForSpeed;\n        invariant$1(isString(name), \"`name` must be a string\");\n        this._name = name;\n        this._deletedRulePlaceholder = \"#\" + name + \"-deleted-rule____{}\";\n        invariant$1(typeof optimizeForSpeed === \"boolean\", \"`optimizeForSpeed` must be a boolean\");\n        this._optimizeForSpeed = optimizeForSpeed;\n        this._serverSheet = undefined;\n        this._tags = [];\n        this._injected = false;\n        this._rulesCount = 0;\n        var node =  true && document.querySelector('meta[property=\"csp-nonce\"]');\n        this._nonce = node ? node.getAttribute(\"content\") : null;\n    }\n    var _proto = StyleSheet.prototype;\n    _proto.setOptimizeForSpeed = function setOptimizeForSpeed(bool) {\n        invariant$1(typeof bool === \"boolean\", \"`setOptimizeForSpeed` accepts a boolean\");\n        invariant$1(this._rulesCount === 0, \"optimizeForSpeed cannot be when rules have already been inserted\");\n        this.flush();\n        this._optimizeForSpeed = bool;\n        this.inject();\n    };\n    _proto.isOptimizeForSpeed = function isOptimizeForSpeed() {\n        return this._optimizeForSpeed;\n    };\n    _proto.inject = function inject() {\n        var _this = this;\n        invariant$1(!this._injected, \"sheet already injected\");\n        this._injected = true;\n        if ( true && this._optimizeForSpeed) {\n            this._tags[0] = this.makeStyleTag(this._name);\n            this._optimizeForSpeed = \"insertRule\" in this.getSheet();\n            if (!this._optimizeForSpeed) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: optimizeForSpeed mode not supported falling back to standard mode.\");\n                }\n                this.flush();\n                this._injected = true;\n            }\n            return;\n        }\n        this._serverSheet = {\n            cssRules: [],\n            insertRule: function(rule, index) {\n                if (typeof index === \"number\") {\n                    _this._serverSheet.cssRules[index] = {\n                        cssText: rule\n                    };\n                } else {\n                    _this._serverSheet.cssRules.push({\n                        cssText: rule\n                    });\n                }\n                return index;\n            },\n            deleteRule: function(index) {\n                _this._serverSheet.cssRules[index] = null;\n            }\n        };\n    };\n    _proto.getSheetForTag = function getSheetForTag(tag) {\n        if (tag.sheet) {\n            return tag.sheet;\n        }\n        // this weirdness brought to you by firefox\n        for(var i = 0; i < document.styleSheets.length; i++){\n            if (document.styleSheets[i].ownerNode === tag) {\n                return document.styleSheets[i];\n            }\n        }\n    };\n    _proto.getSheet = function getSheet() {\n        return this.getSheetForTag(this._tags[this._tags.length - 1]);\n    };\n    _proto.insertRule = function insertRule(rule, index) {\n        invariant$1(isString(rule), \"`insertRule` accepts only strings\");\n        if (false) {}\n        if (this._optimizeForSpeed) {\n            var sheet = this.getSheet();\n            if (typeof index !== \"number\") {\n                index = sheet.cssRules.length;\n            }\n            // this weirdness for perf, and chrome's weird bug\n            // https://stackoverflow.com/questions/20007992/chrome-suddenly-stopped-accepting-insertrule\n            try {\n                sheet.insertRule(rule, index);\n            } catch (error) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: illegal rule: \\n\\n\" + rule + \"\\n\\nSee https://stackoverflow.com/q/20007992 for more info\");\n                }\n                return -1;\n            }\n        } else {\n            var insertionPoint = this._tags[index];\n            this._tags.push(this.makeStyleTag(this._name, rule, insertionPoint));\n        }\n        return this._rulesCount++;\n    };\n    _proto.replaceRule = function replaceRule(index, rule) {\n        if (this._optimizeForSpeed || \"object\" === \"undefined\") {\n            var sheet =  true ? this.getSheet() : 0;\n            if (!rule.trim()) {\n                rule = this._deletedRulePlaceholder;\n            }\n            if (!sheet.cssRules[index]) {\n                // @TBD Should we throw an error?\n                return index;\n            }\n            sheet.deleteRule(index);\n            try {\n                sheet.insertRule(rule, index);\n            } catch (error) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: illegal rule: \\n\\n\" + rule + \"\\n\\nSee https://stackoverflow.com/q/20007992 for more info\");\n                }\n                // In order to preserve the indices we insert a deleteRulePlaceholder\n                sheet.insertRule(this._deletedRulePlaceholder, index);\n            }\n        } else {\n            var tag = this._tags[index];\n            invariant$1(tag, \"old rule at index `\" + index + \"` not found\");\n            tag.textContent = rule;\n        }\n        return index;\n    };\n    _proto.deleteRule = function deleteRule(index) {\n        if (false) {}\n        if (this._optimizeForSpeed) {\n            this.replaceRule(index, \"\");\n        } else {\n            var tag = this._tags[index];\n            invariant$1(tag, \"rule at index `\" + index + \"` not found\");\n            tag.parentNode.removeChild(tag);\n            this._tags[index] = null;\n        }\n    };\n    _proto.flush = function flush() {\n        this._injected = false;\n        this._rulesCount = 0;\n        if (true) {\n            this._tags.forEach(function(tag) {\n                return tag && tag.parentNode.removeChild(tag);\n            });\n            this._tags = [];\n        } else {}\n    };\n    _proto.cssRules = function cssRules() {\n        var _this = this;\n        if (false) {}\n        return this._tags.reduce(function(rules, tag) {\n            if (tag) {\n                rules = rules.concat(Array.prototype.map.call(_this.getSheetForTag(tag).cssRules, function(rule) {\n                    return rule.cssText === _this._deletedRulePlaceholder ? null : rule;\n                }));\n            } else {\n                rules.push(null);\n            }\n            return rules;\n        }, []);\n    };\n    _proto.makeStyleTag = function makeStyleTag(name, cssString, relativeToTag) {\n        if (cssString) {\n            invariant$1(isString(cssString), \"makeStyleTag accepts only strings as second parameter\");\n        }\n        var tag = document.createElement(\"style\");\n        if (this._nonce) tag.setAttribute(\"nonce\", this._nonce);\n        tag.type = \"text/css\";\n        tag.setAttribute(\"data-\" + name, \"\");\n        if (cssString) {\n            tag.appendChild(document.createTextNode(cssString));\n        }\n        var head = document.head || document.getElementsByTagName(\"head\")[0];\n        if (relativeToTag) {\n            head.insertBefore(tag, relativeToTag);\n        } else {\n            head.appendChild(tag);\n        }\n        return tag;\n    };\n    _createClass(StyleSheet, [\n        {\n            key: \"length\",\n            get: function get() {\n                return this._rulesCount;\n            }\n        }\n    ]);\n    return StyleSheet;\n}();\nfunction invariant$1(condition, message) {\n    if (!condition) {\n        throw new Error(\"StyleSheet: \" + message + \".\");\n    }\n}\nfunction hash(str) {\n    var _$hash = 5381, i = str.length;\n    while(i){\n        _$hash = _$hash * 33 ^ str.charCodeAt(--i);\n    }\n    /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */ return _$hash >>> 0;\n}\nvar stringHash = hash;\nvar sanitize = function(rule) {\n    return rule.replace(/\\/style/gi, \"\\\\/style\");\n};\nvar cache = {};\n/**\n * computeId\n *\n * Compute and memoize a jsx id from a basedId and optionally props.\n */ function computeId(baseId, props) {\n    if (!props) {\n        return \"jsx-\" + baseId;\n    }\n    var propsToString = String(props);\n    var key = baseId + propsToString;\n    if (!cache[key]) {\n        cache[key] = \"jsx-\" + stringHash(baseId + \"-\" + propsToString);\n    }\n    return cache[key];\n}\n/**\n * computeSelector\n *\n * Compute and memoize dynamic selectors.\n */ function computeSelector(id, css) {\n    var selectoPlaceholderRegexp = /__jsx-style-dynamic-selector/g;\n    // Sanitize SSR-ed CSS.\n    // Client side code doesn't need to be sanitized since we use\n    // document.createTextNode (dev) and the CSSOM api sheet.insertRule (prod).\n    if (false) {}\n    var idcss = id + css;\n    if (!cache[idcss]) {\n        cache[idcss] = css.replace(selectoPlaceholderRegexp, id);\n    }\n    return cache[idcss];\n}\nfunction mapRulesToStyle(cssRules, options) {\n    if (options === void 0) options = {};\n    return cssRules.map(function(args) {\n        var id = args[0];\n        var css = args[1];\n        return /*#__PURE__*/ React__default[\"default\"].createElement(\"style\", {\n            id: \"__\" + id,\n            // Avoid warnings upon render with a key\n            key: \"__\" + id,\n            nonce: options.nonce ? options.nonce : undefined,\n            dangerouslySetInnerHTML: {\n                __html: css\n            }\n        });\n    });\n}\nvar StyleSheetRegistry = /*#__PURE__*/ function() {\n    function StyleSheetRegistry(param) {\n        var ref = param === void 0 ? {} : param, _styleSheet = ref.styleSheet, styleSheet = _styleSheet === void 0 ? null : _styleSheet, _optimizeForSpeed = ref.optimizeForSpeed, optimizeForSpeed = _optimizeForSpeed === void 0 ? false : _optimizeForSpeed;\n        this._sheet = styleSheet || new StyleSheet({\n            name: \"styled-jsx\",\n            optimizeForSpeed: optimizeForSpeed\n        });\n        this._sheet.inject();\n        if (styleSheet && typeof optimizeForSpeed === \"boolean\") {\n            this._sheet.setOptimizeForSpeed(optimizeForSpeed);\n            this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();\n        }\n        this._fromServer = undefined;\n        this._indices = {};\n        this._instancesCounts = {};\n    }\n    var _proto = StyleSheetRegistry.prototype;\n    _proto.add = function add(props) {\n        var _this = this;\n        if (undefined === this._optimizeForSpeed) {\n            this._optimizeForSpeed = Array.isArray(props.children);\n            this._sheet.setOptimizeForSpeed(this._optimizeForSpeed);\n            this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();\n        }\n        if ( true && !this._fromServer) {\n            this._fromServer = this.selectFromServer();\n            this._instancesCounts = Object.keys(this._fromServer).reduce(function(acc, tagName) {\n                acc[tagName] = 0;\n                return acc;\n            }, {});\n        }\n        var ref = this.getIdAndRules(props), styleId = ref.styleId, rules = ref.rules;\n        // Deduping: just increase the instances count.\n        if (styleId in this._instancesCounts) {\n            this._instancesCounts[styleId] += 1;\n            return;\n        }\n        var indices = rules.map(function(rule) {\n            return _this._sheet.insertRule(rule);\n        }) // Filter out invalid rules\n        .filter(function(index) {\n            return index !== -1;\n        });\n        this._indices[styleId] = indices;\n        this._instancesCounts[styleId] = 1;\n    };\n    _proto.remove = function remove(props) {\n        var _this = this;\n        var styleId = this.getIdAndRules(props).styleId;\n        invariant(styleId in this._instancesCounts, \"styleId: `\" + styleId + \"` not found\");\n        this._instancesCounts[styleId] -= 1;\n        if (this._instancesCounts[styleId] < 1) {\n            var tagFromServer = this._fromServer && this._fromServer[styleId];\n            if (tagFromServer) {\n                tagFromServer.parentNode.removeChild(tagFromServer);\n                delete this._fromServer[styleId];\n            } else {\n                this._indices[styleId].forEach(function(index) {\n                    return _this._sheet.deleteRule(index);\n                });\n                delete this._indices[styleId];\n            }\n            delete this._instancesCounts[styleId];\n        }\n    };\n    _proto.update = function update(props, nextProps) {\n        this.add(nextProps);\n        this.remove(props);\n    };\n    _proto.flush = function flush() {\n        this._sheet.flush();\n        this._sheet.inject();\n        this._fromServer = undefined;\n        this._indices = {};\n        this._instancesCounts = {};\n    };\n    _proto.cssRules = function cssRules() {\n        var _this = this;\n        var fromServer = this._fromServer ? Object.keys(this._fromServer).map(function(styleId) {\n            return [\n                styleId,\n                _this._fromServer[styleId]\n            ];\n        }) : [];\n        var cssRules = this._sheet.cssRules();\n        return fromServer.concat(Object.keys(this._indices).map(function(styleId) {\n            return [\n                styleId,\n                _this._indices[styleId].map(function(index) {\n                    return cssRules[index].cssText;\n                }).join(_this._optimizeForSpeed ? \"\" : \"\\n\")\n            ];\n        }) // filter out empty rules\n        .filter(function(rule) {\n            return Boolean(rule[1]);\n        }));\n    };\n    _proto.styles = function styles(options) {\n        return mapRulesToStyle(this.cssRules(), options);\n    };\n    _proto.getIdAndRules = function getIdAndRules(props) {\n        var css = props.children, dynamic = props.dynamic, id = props.id;\n        if (dynamic) {\n            var styleId = computeId(id, dynamic);\n            return {\n                styleId: styleId,\n                rules: Array.isArray(css) ? css.map(function(rule) {\n                    return computeSelector(styleId, rule);\n                }) : [\n                    computeSelector(styleId, css)\n                ]\n            };\n        }\n        return {\n            styleId: computeId(id),\n            rules: Array.isArray(css) ? css : [\n                css\n            ]\n        };\n    };\n    /**\n   * selectFromServer\n   *\n   * Collects style tags from the document with id __jsx-XXX\n   */ _proto.selectFromServer = function selectFromServer() {\n        var elements = Array.prototype.slice.call(document.querySelectorAll('[id^=\"__jsx-\"]'));\n        return elements.reduce(function(acc, element) {\n            var id = element.id.slice(2);\n            acc[id] = element;\n            return acc;\n        }, {});\n    };\n    return StyleSheetRegistry;\n}();\nfunction invariant(condition, message) {\n    if (!condition) {\n        throw new Error(\"StyleSheetRegistry: \" + message + \".\");\n    }\n}\nvar StyleSheetContext = /*#__PURE__*/ React.createContext(null);\nStyleSheetContext.displayName = \"StyleSheetContext\";\nfunction createStyleRegistry() {\n    return new StyleSheetRegistry();\n}\nfunction StyleRegistry(param) {\n    _s();\n    var configuredRegistry = param.registry, children = param.children;\n    var rootRegistry = React.useContext(StyleSheetContext);\n    var ref = React.useState(function() {\n        return rootRegistry || configuredRegistry || createStyleRegistry();\n    }), registry = ref[0];\n    return /*#__PURE__*/ React__default[\"default\"].createElement(StyleSheetContext.Provider, {\n        value: registry\n    }, children);\n}\n_s(StyleRegistry, \"vgRS4YV7PcSMQCYHzGaNuBIBcZQ=\");\n_c1 = StyleRegistry;\nfunction useStyleRegistry() {\n    _s1();\n    return React.useContext(StyleSheetContext);\n}\n_s1(useStyleRegistry, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n// Opt-into the new `useInsertionEffect` API in React 18, fallback to `useLayoutEffect`.\n// https://github.com/reactwg/react-18/discussions/110\nvar useInsertionEffect = React__default[\"default\"].useInsertionEffect || React__default[\"default\"].useLayoutEffect;\nvar defaultRegistry =  true ? createStyleRegistry() : 0;\nfunction JSXStyle(props) {\n    _s2();\n    var registry = defaultRegistry ? defaultRegistry : useStyleRegistry();\n    // If `registry` does not exist, we do nothing here.\n    if (!registry) {\n        return null;\n    }\n    if (false) {}\n    useInsertionEffect(function() {\n        registry.add(props);\n        return function() {\n            registry.remove(props);\n        };\n    // props.children can be string[], will be striped since id is identical\n    }, [\n        props.id,\n        String(props.dynamic)\n    ]);\n    return null;\n}\n_s2(JSXStyle, \"48Sqj1BUqkshsPdz6NEWXDn8pF4=\", false, function() {\n    return [\n        useStyleRegistry,\n        useInsertionEffect\n    ];\n});\n_c2 = JSXStyle;\nJSXStyle.dynamic = function(info) {\n    return info.map(function(tagInfo) {\n        var baseId = tagInfo[0];\n        var props = tagInfo[1];\n        return computeId(baseId, props);\n    }).join(\" \");\n};\nexports.StyleRegistry = StyleRegistry;\nexports.createStyleRegistry = createStyleRegistry;\nexports.style = JSXStyle;\nexports.useStyleRegistry = useStyleRegistry;\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"React__default\");\n$RefreshReg$(_c1, \"StyleRegistry\");\n$RefreshReg$(_c2, \"JSXStyle\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/styled-jsx/dist/index/index.js\n"));

/***/ }),

/***/ "./node_modules/styled-jsx/style.js":
/*!******************************************!*\
  !*** ./node_modules/styled-jsx/style.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = __webpack_require__(/*! ./dist/index */ \"./node_modules/styled-jsx/dist/index/index.js\").style;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGVkLWpzeC9zdHlsZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUFBLCtHQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3R5bGVkLWpzeC9zdHlsZS5qcz8zNzBiIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L2luZGV4Jykuc3R5bGVcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSIsInN0eWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/styled-jsx/style.js\n"));

/***/ }),

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Home; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _src_components_FieldNodesTerminal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components/FieldNodesTerminal */ \"./src/components/FieldNodesTerminal.tsx\");\n\n\nfunction Home() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_src_components_FieldNodesTerminal__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {}, void 0, false, {\n        fileName: \"/Users/candacestewart/fieldnodes-react/pages/index.tsx\",\n        lineNumber: 4,\n        columnNumber: 10\n    }, this);\n}\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9pbmRleC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBc0U7QUFFdkQsU0FBU0M7SUFDdEIscUJBQU8sOERBQUNELDBFQUFrQkE7Ozs7O0FBQzVCO0tBRndCQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wYWdlcy9pbmRleC50c3g/MDdmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRmllbGROb2Rlc1Rlcm1pbmFsIGZyb20gJy4uL3NyYy9jb21wb25lbnRzL0ZpZWxkTm9kZXNUZXJtaW5hbCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEhvbWUoKSB7XG4gIHJldHVybiA8RmllbGROb2Rlc1Rlcm1pbmFsIC8+O1xufVxuIl0sIm5hbWVzIjpbIkZpZWxkTm9kZXNUZXJtaW5hbCIsIkhvbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/index.tsx\n"));

/***/ }),

/***/ "./src/components/FieldNodesTerminal.tsx":
/*!***********************************************!*\
  !*** ./src/components/FieldNodesTerminal.tsx ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ FieldNodesTerminal; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-jsx/style */ \"./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _RawNodeEditor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RawNodeEditor */ \"./src/components/RawNodeEditor.tsx\");\n/* harmony import */ var _services_storage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../services/storage */ \"./src/services/storage.ts\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\nconst palette = {\n    bg: \"#0E0E10\",\n    ink: \"#F5EDEE\",\n    magenta: \"#D65CA9\",\n    lilac: \"#B27CB6\",\n    orchid: \"#A05C8D\",\n    muted: \"#9AA0A6\"\n};\nconst stageCommands = {\n    origin: [\n        \"/node\",\n        \"/browse\",\n        \"/orient\",\n        \"/home\",\n        \"/help\"\n    ],\n    orient: [\n        \"/home\",\n        \"/help\",\n        \"/explore\"\n    ],\n    covenant: [\n        \"/home\",\n        \"/agree\",\n        \"/policy\",\n        \"/exit\"\n    ],\n    identify: [\n        \"/home\",\n        \"/login\",\n        \"/guest\"\n    ],\n    login: [\n        \"/home\",\n        \"/login\"\n    ],\n    \"account-confirmed\": [\n        \"/home\",\n        \"/explore\"\n    ],\n    lineage: [\n        \"/home\",\n        \"/node\",\n        \"/browse\",\n        \"/explore\",\n        \"/help\"\n    ],\n    reflect: [\n        \"/home\",\n        \"/link\",\n        \"/tend\",\n        \"/explore\",\n        \"/offer\",\n        \"/node\",\n        \"/browse\",\n        \"/help\"\n    ],\n    link: [\n        \"/home\",\n        \"/tend\",\n        \"/explore\",\n        \"/offer\",\n        \"/node\",\n        \"/browse\",\n        \"/help\"\n    ],\n    tend: [\n        \"/home\",\n        \"/done\",\n        \"/help\"\n    ],\n    offer: [\n        \"/home\",\n        \"/publish\",\n        \"/back\"\n    ],\n    \"create-node\": [\n        \"/home\",\n        \"/cancel\"\n    ],\n    \"browse-nodes\": [\n        \"/home\",\n        \"/node\",\n        \"/back\",\n        \"/search\",\n        \"/filter\",\n        \"/help\"\n    ],\n    \"node-detail\": [\n        \"/home\",\n        \"/link\",\n        \"/tend\",\n        \"/back\",\n        \"/edit\",\n        \"/help\"\n    ]\n};\nconst orientPages = [\n    \"welcome to FIELD NODES\\n──────────────────────────────────────────────\\na shared environment for collaborative thinking\\neach idea lives as a node—connected, editable,\\nand part of a collective field of knowledge\\n──────────────────────────────────────────────\\n\\n\\uD83D\\uDCD6 ABOUT\\nField Nodes is not social media or a feed.\\nIt's a collaborative workspace where participants\\ncreate, connect, and care for ideas.\\nYou can explore existing nodes, add your own,\\nor reflect on others.\\n\\n\\uD83E\\uDDED BASIC COMMANDS\\n   /orient     see this guide again\\n   /explore    browse existing fields and nodes\\n   /help       list all available commands\\n\\n\\uD83D\\uDCA1 BEST PRACTICES\\n   • move slowly — context matters\\n   • listen before adding\\n   • name things clearly so others can find them\\n   • credit existing connections when you extend them\"\n];\nconst covenantBlock = \"──────────────────────────────────────────────\\nFIELD NODES COVENANT\\n──────────────────────────────────────────────\\nBefore joining, review our shared principles:\\n\\n• Knowledge here is collective, additive, and attributed.\\n• We design for care, not competition.\\n• Contributions can be linked, forked, and preserved with credit.\\n• We honor pacing, rest, and context.\\n• We reject harassment, extraction, and scarcity.\\n\\nTo participate, you must agree to uphold these values.\\n\\n[ type /agree ]   [ /policy ]   [ /exit ]\\n──────────────────────────────────────────────\";\nconst identityIntro = \"──────────────────────────────────────────────\\nACCOUNT CREATION\\n──────────────────────────────────────────────\\nto write and create in the field, you need an account:\\n\\nchoose a name: [type below]\\nchoose a password: [type below]\\n\\n──────────────────────────────────────────────\\nAlready have an account? type /login\\nWant to browse first? type /guest\";\nfunction formatHandle(name) {\n    if (!name) return \"guest\";\n    const cleaned = name.trim().toLowerCase().replace(/[^a-z0-9]+/g, \".\").replace(/^\\.+|\\.+$/g, \"\");\n    return cleaned.length ? cleaned : \"guest\";\n}\nfunction identityConfirmedBlock(name) {\n    return \"──────────────────────────────────────────────\\nIDENTITY CONFIRMED\\n──────────────────────────────────────────────\\nwelcome, \".concat(formatHandle(name), \"@fieldnodes\\nyour space has been initialized\\n\\nSTATE: exploring\\nMODE: collective\\nDATA: local-first sync ON\\n\\nready when you are.\");\n}\nfunction explorationBlockFor(handle) {\n    return \"exploration mode initiated...\\n┌─ ACTIVE FIELDS ─────────────────────────────┐\\n│  system_design     (14 connected nodes)     │\\n│  feminist_theory   (22 connected nodes)     │\\n│  mutual_aid        (17 connected nodes)     │\\n│  archiving         (10 connected nodes)     │\\n│  infrastructure    (8 connected nodes)      │\\n└─────────────────────────────────────────────┘\\n\\n\\uD83D\\uDCCD YOU ARE HERE\\n   \".concat(handle, \":~FIELD\\n   STATE: exploring | MODE: collective\\n\\n\\uD83E\\uDDED NEXT STEPS\\n   /enter [field_name]     → explore one field\\n   /map                    → view full network\\n   /help                   → list all commands\\n\\n\\uD83D\\uDCA1 TIP\\n   browse first, contribute second\\n   the field grows best through relation\");\n}\nconst rolePromptBlock = \"──────────────────────────────────────────────\\nROLE DISCOVERY\\n──────────────────────────────────────────────\\nyou are tending your first node\\n\\nhow would you describe your role today?\\n(observer / builder / reflector / steward)\\n\\nroles can change as you move through the field.\\nchoose one that feels right for now:\\nrole: [_________]\\n──────────────────────────────────────────────\";\nconst styles = {\n    frameWrap: {\n        background: \"#0b0b0d\",\n        border: \"1px solid #222\",\n        borderRadius: \"10px\",\n        padding: \"32px 40px\",\n        width: \"fit-content\",\n        margin: \"80px auto\",\n        boxShadow: \"0 0 60px rgba(208, 128, 208, 0.08)\"\n    },\n    frame: {\n        maxWidth: \"64ch\",\n        fontFamily: \"'IBM Plex Mono', ui-monospace, monospace\",\n        fontWeight: 400\n    },\n    output: {\n        whiteSpace: \"pre-wrap\",\n        lineHeight: 1.9,\n        letterSpacing: \"0.15px\",\n        fontSize: \"18px\",\n        marginBottom: \"10px\"\n    },\n    hero: {\n        color: palette.ink,\n        display: \"block\",\n        margin: \"4px 0\",\n        fontSize: \"18px\"\n    },\n    header: {\n        color: palette.lilac,\n        fontSize: \"18px\",\n        marginBottom: \"12px\"\n    },\n    cmdHint: {\n        color: palette.magenta,\n        fontSize: \"18px\",\n        marginTop: \"10px\",\n        display: \"block\"\n    },\n    promptRow: {\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: \"6px\",\n        marginTop: \"12px\"\n    },\n    promptInputWrap: {\n        position: \"relative\",\n        display: \"inline-flex\",\n        alignItems: \"center\"\n    },\n    promptCaret: {\n        color: palette.magenta,\n        borderRight: \"2px solid \".concat(palette.magenta),\n        display: \"inline-block\",\n        height: \"1.4em\",\n        marginLeft: \"4px\",\n        marginRight: \"2px\",\n        width: 0,\n        pointerEvents: \"none\",\n        animation: \"blink 1.4s ease-in-out infinite\"\n    },\n    promptSuggestion: {\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        font: \"inherit\",\n        color: \"\".concat(palette.magenta, \"66\"),\n        pointerEvents: \"none\",\n        whiteSpace: \"pre\"\n    },\n    promptInput: {\n        position: \"relative\",\n        width: \"38ch\",\n        background: \"transparent\",\n        border: \"none\",\n        outline: \"none\",\n        color: palette.ink,\n        font: \"inherit\",\n        fontSize: \"18px\",\n        caretColor: palette.magenta,\n        textShadow: \"0 0 6px \".concat(palette.lilac, \"44\")\n    }\n};\nfunction FieldNodesTerminal() {\n    _s();\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_3__.useRouter)();\n    const [lines, setLines] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]);\n    const [stage, setStage] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"origin\");\n    const [input, setInput] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    const [draft, setDraft] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    const [unlockedSeed, setUnlockedSeed] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [userIdentity, setUserIdentity] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [accountStep, setAccountStep] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"name\");\n    const [showNodeForm, setShowNodeForm] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [browseNodes, setBrowseNodes] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]);\n    const endRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const inputRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const hasBooted = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(false);\n    const orientIndexRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(0);\n    const [suggestion, setSuggestion] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (hasBooted.current) return;\n        hasBooted.current = true;\n        boot();\n    }, []);\n    // Handle URL command parameters\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const { command } = router.query;\n        if (command && typeof command === \"string\") {\n            // Small delay to ensure component is ready\n            setTimeout(()=>{\n                handleCommand(command);\n            }, 100);\n        }\n    }, [\n        router.query\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        var _endRef_current;\n        (_endRef_current = endRef.current) === null || _endRef_current === void 0 ? void 0 : _endRef_current.scrollIntoView({\n            behavior: \"smooth\"\n        });\n    }, [\n        lines\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const onSlash = (e)=>{\n            var _inputRef_current;\n            if (e.key !== \"/\" || e.metaKey || e.ctrlKey || e.altKey) return;\n            const target = e.target;\n            if (target && (target.tagName === \"INPUT\" || target.tagName === \"TEXTAREA\" || target.isContentEditable)) {\n                return;\n            }\n            e.preventDefault();\n            (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.focus();\n            setInput(\"/\");\n        };\n        window.addEventListener(\"keydown\", onSlash);\n        return ()=>window.removeEventListener(\"keydown\", onSlash);\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        setSuggestion(getSuggestion(input, stage));\n    }, [\n        input,\n        stage\n    ]);\n    function push(s) {\n        setLines((l)=>[\n                ...l,\n                s\n            ]);\n    }\n    function hero(text) {\n        return '<span style=\"\\n      color:'.concat(palette.ink, ';\\n      display:block;\\n      margin:4px 0;\\n      font-size:18px;\\n    \">').concat(escapeHtml(text), \"</span>\");\n    }\n    async function typeText(text) {\n        let delay = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2;\n        return new Promise((resolve)=>{\n            let i = 0;\n            const timer = setInterval(()=>{\n                if (i < text.length) {\n                    // Replace the last line instead of adding new ones\n                    setLines((prev)=>{\n                        const newLines = [\n                            ...prev\n                        ];\n                        newLines[newLines.length - 1] = text.slice(0, i + 1);\n                        return newLines;\n                    });\n                    i++;\n                } else {\n                    clearInterval(timer);\n                    resolve();\n                }\n            }, Math.max(1, delay + Math.random() * 2)); // quicker cadence\n        });\n    }\n    async function boot() {\n        // Initial connection delay - much faster\n        await new Promise((resolve)=>setTimeout(resolve, 200));\n        // Start with empty line for typing\n        push(\"\");\n        await typeText('<span style=\"color:'.concat(palette.lilac, ';font-size:18px\">guest@fieldnodes:~FIELD</span>'));\n        await new Promise((resolve)=>setTimeout(resolve, 200));\n        push(\"\");\n        await typeText(hero(\"welcome to a space where thoughts connect\"));\n        await new Promise((resolve)=>setTimeout(resolve, 200));\n        push(\"\");\n        await typeText(hero(\"where ideas grow through relation, not competition\"));\n        await new Promise((resolve)=>setTimeout(resolve, 200));\n        push(\"\");\n        await typeText(hero(\"this is not about being seen\"));\n        await new Promise((resolve)=>setTimeout(resolve, 150));\n        push(\"\");\n        await typeText(hero(\"it's about listening, tending, belonging\"));\n        await new Promise((resolve)=>setTimeout(resolve, 200));\n        push(\"\");\n        await typeText('<span style=\"color:'.concat(palette.magenta, ';font-size:18px\">&gt; type /node to create your first node</span>'));\n        await new Promise((resolve)=>setTimeout(resolve, 100));\n        push(\"\");\n        await typeText('<span style=\"color:'.concat(palette.magenta, ';font-size:18px\">&gt; type /browse to explore existing nodes</span>'));\n        await new Promise((resolve)=>setTimeout(resolve, 100));\n        push(\"\");\n        await typeText('<span style=\"color:'.concat(palette.magenta, ';font-size:18px\">&gt; type /orient to learn more about the system</span>'));\n        // Small delay before input becomes active\n        await new Promise((resolve)=>setTimeout(resolve, 100));\n    }\n    function color(text) {\n        let kind = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"accent\";\n        const c = kind === \"accent\" ? palette.magenta : kind === \"muted\" ? palette.muted : palette.lilac;\n        return '<span style=\"color:'.concat(c, '\">').concat(escapeHtml(text), \"</span>\");\n    }\n    function escapeHtml(s) {\n        return s.replace(/[&<>]/g, (c)=>({\n                \"&\": \"&amp;\",\n                \"<\": \"&lt;\",\n                \">\": \"&gt;\"\n            })[c]);\n    }\n    const pause = function() {\n        let ms = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 35;\n        return new Promise((resolve)=>setTimeout(resolve, ms));\n    };\n    async function write(text, kind) {\n        push(\"\");\n        await typeText(kind ? color(text, kind) : text);\n        await pause(25);\n    }\n    async function handleCommand(raw) {\n        let cmd = raw.trim();\n        // Remove leading slash if present (consistent with HelpTerminal)\n        if (cmd.startsWith(\"/\")) {\n            cmd = cmd.slice(1);\n        }\n        if (stage === \"orient\" && cmd === \"\") {\n            setInput(\"\");\n            setSuggestion(\"\");\n            await showCovenant();\n            return;\n        }\n        if (stage === \"covenant\" && cmd === \"\") {\n            setInput(\"\");\n            setSuggestion(\"\");\n            await write(\"type /agree to continue or /policy to review terms.\", \"muted\");\n            return;\n        }\n        push(\"\");\n        await typeText(color(\"> \".concat(cmd), \"accent\"));\n        await pause(10);\n        setInput(\"\");\n        setSuggestion(\"\");\n        switch(stage){\n            case \"origin\":\n                {\n                    if (cmd === \"node\") {\n                        setStage(\"create-node\");\n                        setShowNodeForm(true);\n                        return;\n                    }\n                    if (cmd === \"browse\") {\n                        await showBrowseNodes();\n                        return;\n                    }\n                    if (cmd === \"orient\") {\n                        await runOrient();\n                        return;\n                    }\n                    if (cmd === \"home\") {\n                        setStage(\"origin\");\n                        setLines([]); // Clear terminal completely\n                        await boot();\n                        return;\n                    }\n                    if (cmd === \"join\") {\n                        await handleJoin();\n                        return;\n                    }\n                    if (cmd === \"reflect\") {\n                        await handleReflect();\n                        return;\n                    }\n                    if (cmd === \"help\") {\n                        router.push(\"/help\");\n                        return;\n                    }\n                    await write(\"type /node to create your first node\", \"muted\");\n                    return;\n                }\n            case \"orient\":\n                {\n                    if (cmd === \"home\") {\n                        setStage(\"origin\");\n                        setLines([]); // Clear terminal completely\n                        await boot();\n                        return;\n                    }\n                    if (cmd === \"explore\") {\n                        await showIdentityIntro();\n                        return;\n                    }\n                    if (cmd === \"help\") {\n                        router.push(\"/help\");\n                        return;\n                    }\n                    if (cmd === \"\") {\n                        await showCovenant();\n                        return;\n                    }\n                    await write(\"press Enter to continue or /explore to skip.\", \"muted\");\n                    return;\n                }\n            case \"covenant\":\n                {\n                    if (cmd === \"home\") {\n                        setStage(\"origin\");\n                        setLines([]); // Clear terminal completely\n                        await boot();\n                        return;\n                    }\n                    if (cmd === \"agree\") {\n                        await showIdentityIntro();\n                        return;\n                    }\n                    if (cmd === \"policy\") {\n                        await write(\"opening the shared policy archive (placeholder).\", \"muted\");\n                        await write(\"type /agree when you are ready to continue.\", \"muted\");\n                        return;\n                    }\n                    if (cmd === \"exit\") {\n                        await write(\"connection closed. type /orient to reconnect.\", \"muted\");\n                        setStage(\"origin\");\n                        return;\n                    }\n                    await write(\"available: /home \\xb7 /agree \\xb7 /policy \\xb7 /exit\", \"muted\");\n                    return;\n                }\n            case \"identify\":\n                {\n                    if (cmd === \"home\") {\n                        setStage(\"origin\");\n                        setLines([]); // Clear terminal completely\n                        await boot();\n                        return;\n                    }\n                    if (cmd === \"login\") {\n                        await write(\"username: [__________]\", \"muted\");\n                        await write(\"format: username: [your username]\", \"accent\");\n                        setStage(\"login\");\n                        return;\n                    }\n                    if (cmd === \"guest\") {\n                        setUserIdentity({\n                            name: \"guest\",\n                            role: \"observer\"\n                        });\n                        await write(\"welcome, guest! you can browse and explore.\");\n                        await write(\"to write and create, you'll need an account.\");\n                        await showExplorationIntro(\"guest\");\n                        return;\n                    }\n                    // Handle account creation steps (non-command input)\n                    if (cmd !== \"home\" && cmd !== \"login\" && cmd !== \"guest\") {\n                        if (accountStep === \"name\") {\n                            const name = cmd.trim();\n                            if (name.length < 2) {\n                                await write(\"please provide a name (2+ characters)\", \"muted\");\n                                return;\n                            }\n                            setUserIdentity({\n                                name,\n                                role: \"\",\n                                password: \"\"\n                            });\n                            setAccountStep(\"password\");\n                            await showPasswordScreen(name);\n                            return;\n                        }\n                        if (accountStep === \"password\") {\n                            const password = cmd.trim();\n                            if (password.length < 4) {\n                                await write(\"password must be at least 4 characters\", \"muted\");\n                                return;\n                            }\n                            setUserIdentity((prev)=>prev ? {\n                                    ...prev,\n                                    password\n                                } : null);\n                            setAccountStep(\"complete\");\n                            await showAccountConfirmed((userIdentity === null || userIdentity === void 0 ? void 0 : userIdentity.name) || \"\");\n                            return;\n                        }\n                    }\n                    await write(\"just type your name, or use /login /guest\", \"muted\");\n                    return;\n                }\n            case \"account-confirmed\":\n                {\n                    if (cmd === \"\") {\n                        await showExplorationIntro((userIdentity === null || userIdentity === void 0 ? void 0 : userIdentity.name) || \"\");\n                        return;\n                    }\n                    await write(\"press Enter to begin exploring\", \"muted\");\n                    return;\n                }\n            case \"login\":\n                {\n                    if (cmd === \"home\") {\n                        setStage(\"origin\");\n                        setLines([]); // Clear terminal completely\n                        await boot();\n                        return;\n                    }\n                    // Handle login steps (non-command input)\n                    if (cmd !== \"home\" && cmd !== \"login\") {\n                        if (accountStep === \"name\") {\n                            const username = cmd.trim();\n                            if (username.length < 2) {\n                                await write(\"please provide a username (2+ characters)\", \"muted\");\n                                return;\n                            }\n                            setUserIdentity({\n                                name: username,\n                                role: \"\",\n                                password: \"\"\n                            });\n                            setAccountStep(\"password\");\n                            await write(\"username: \".concat(username));\n                            await write(\"password:\");\n                            return;\n                        }\n                        if (accountStep === \"password\") {\n                            const password = cmd.trim();\n                            if (password.length < 4) {\n                                await write(\"password must be at least 4 characters\", \"muted\");\n                                return;\n                            }\n                            // In real app, verify password here\n                            await write(\"welcome back, \".concat((userIdentity === null || userIdentity === void 0 ? void 0 : userIdentity.name) || \"user\"));\n                            await write(\"you are now connected to the field\");\n                            await write(\"available actions: /reflect \\xb7 /link \\xb7 /tend \\xb7 /explore\", \"accent\");\n                            setStage(\"reflect\");\n                            return;\n                        }\n                    }\n                    await write(\"just type your username\", \"muted\");\n                    return;\n                }\n            case \"lineage\":\n                {\n                    if (cmd === \"home\") {\n                        setStage(\"origin\");\n                        setLines([]); // Clear terminal completely\n                        await boot();\n                        return;\n                    }\n                    if (cmd === \"map\") {\n                        await write(\"rendering network map… (prototype placeholder)\", \"muted\");\n                        return;\n                    }\n                    if (cmd === \"node\") {\n                        if ((userIdentity === null || userIdentity === void 0 ? void 0 : userIdentity.name) === \"guest\") {\n                            await write(\"guests cannot create nodes. create an account to participate.\", \"muted\");\n                            return;\n                        }\n                        setStage(\"create-node\");\n                        setShowNodeForm(true);\n                        return;\n                    }\n                    if (cmd === \"browse\") {\n                        await showBrowseNodes();\n                        return;\n                    }\n                    if (cmd === \"help\") {\n                        router.push(\"/help\");\n                        return;\n                    }\n                    if (cmd === \"explore\") {\n                        await showExplorationIntro((userIdentity === null || userIdentity === void 0 ? void 0 : userIdentity.name) || undefined);\n                        return;\n                    }\n                    if (cmd === \"lineage\") {\n                        await write(\"field exploration coming soon. for now, create nodes to build the field.\");\n                        await write(\"type /node to create your first node, or /browse to see existing ones.\");\n                        return;\n                    }\n                    await write(\"available: /node \\xb7 /browse \\xb7 /explore\", \"muted\");\n                    return;\n                }\n            case \"reflect\":\n                {\n                    if (cmd === \"home\") {\n                        setStage(\"origin\");\n                        setLines([]); // Clear terminal completely\n                        await boot();\n                        return;\n                    }\n                    // Check if user is guest (read-only)\n                    if ((userIdentity === null || userIdentity === void 0 ? void 0 : userIdentity.name) === \"guest\") {\n                        if (cmd === \"explore\") {\n                            await write(\"node interface coming soon. for now, use /browse to see nodes.\");\n                            push(color(\"type /reflect to return to writing\", \"muted\"));\n                            return;\n                        }\n                        if (cmd === \"browse\") {\n                            await showBrowseNodes();\n                            return;\n                        }\n                        await write(\"guests can only browse. create an account to write and create.\", \"muted\");\n                        await write(\"type /login to create an account.\", \"muted\");\n                        return;\n                    }\n                    if (cmd === \"node\") {\n                        setStage(\"create-node\");\n                        setShowNodeForm(true);\n                        return;\n                    }\n                    if (cmd === \"browse\") {\n                        await showBrowseNodes();\n                        return;\n                    }\n                    if (cmd.startsWith(\"role:\") && !(userIdentity === null || userIdentity === void 0 ? void 0 : userIdentity.role)) {\n                        const role = cmd.replace(\"role:\", \"\").trim().toLowerCase();\n                        const validRoles = [\n                            \"observer\",\n                            \"builder\",\n                            \"reflector\",\n                            \"steward\"\n                        ];\n                        if (!validRoles.includes(role)) {\n                            await write(\"choose: observer \\xb7 builder \\xb7 reflector \\xb7 steward\", \"muted\");\n                            return;\n                        }\n                        setUserIdentity((prev)=>{\n                            var _prev_name;\n                            return {\n                                ...prev,\n                                role,\n                                name: (_prev_name = prev === null || prev === void 0 ? void 0 : prev.name) !== null && _prev_name !== void 0 ? _prev_name : \"guest\"\n                            };\n                        });\n                        await write(\"role recorded: \".concat(role));\n                        await write(\"you may now tend your node with context.\", \"muted\");\n                        return;\n                    }\n                    if (cmd === \"link\") {\n                        if (draft.trim().length < 10) {\n                            await write(\"add a bit more before linking (~10+ chars).\", \"muted\");\n                            return;\n                        }\n                        setUnlockedSeed(true);\n                        await write(\"link recorded. thank you for tending the field.\");\n                        await write(\"/tend is now available for maintenance.\", \"accent\");\n                        await write(\"you can /offer to publish or keep exploring.\", \"muted\");\n                        setStage(\"link\");\n                        return;\n                    }\n                    if (cmd === \"tend\") {\n                        await write(\"tending mode: add sources, citations, or care-notes\");\n                        await write(\"format: source: [url] or note: [your note]\", \"muted\");\n                        setStage(\"tend\");\n                        return;\n                    }\n                    if (cmd === \"explore\") {\n                        await write(\"exploration mode: browse existing nodes or create new ones.\");\n                        await write(\"type /browse to see nodes, or /node to create a new one.\");\n                        return;\n                    }\n                    if (cmd === \"offer\") {\n                        setStage(\"offer\");\n                        await write(\"identity ritual (mock) — Supabase wiring pending.\", \"muted\");\n                        return;\n                    }\n                    return;\n                }\n            case \"link\":\n                {\n                    if (cmd === \"home\") {\n                        setStage(\"origin\");\n                        setLines([]); // Clear terminal completely\n                        await boot();\n                        return;\n                    }\n                    if (cmd === \"tend\") {\n                        await write(\"tending mode: add sources, citations, or care-notes\");\n                        await write(\"format: source: [url] or note: [your note]\", \"muted\");\n                        setStage(\"tend\");\n                        return;\n                    }\n                    if (cmd === \"explore\") {\n                        await write(\"node interface coming soon. for now, use /browse to see nodes.\");\n                        push(color(\"type /reflect to return to writing\", \"muted\"));\n                        return;\n                    }\n                    if (cmd === \"offer\") {\n                        setStage(\"offer\");\n                        await write(\"identity ritual (mock) — Supabase wiring pending.\", \"muted\");\n                        return;\n                    }\n                    await write(\"available: /tend /explore /offer\", \"muted\");\n                    return;\n                }\n            case \"tend\":\n                {\n                    if (cmd === \"home\") {\n                        setStage(\"origin\");\n                        setLines([]); // Clear terminal completely\n                        await boot();\n                        return;\n                    }\n                    if (cmd.startsWith(\"source:\")) {\n                        const source = cmd.replace(\"source:\", \"\").trim();\n                        await write(\"source added: \".concat(source));\n                        await write(\"add another source or note, or type /done to finish\", \"muted\");\n                        return;\n                    }\n                    if (cmd.startsWith(\"note:\")) {\n                        const note = cmd.replace(\"note:\", \"\").trim();\n                        await write(\"care-note added: \".concat(note));\n                        await write(\"add another source or note, or type /done to finish\", \"muted\");\n                        return;\n                    }\n                    if (cmd === \"done\") {\n                        await write(\"tending complete. node maintained.\");\n                        await write(\"available: /reflect /explore /offer\", \"muted\");\n                        setStage(\"link\");\n                        return;\n                    }\n                    await write(\"format: source: [url] or note: [your note] or /done\", \"muted\");\n                    return;\n                }\n            case \"offer\":\n                {\n                    if (cmd === \"home\") {\n                        setStage(\"origin\");\n                        setLines([]); // Clear terminal completely\n                        await boot();\n                        return;\n                    }\n                    if (cmd === \"publish\") {\n                        await write(\"publishing flow coming soon.\", \"muted\");\n                        return;\n                    }\n                    if (cmd === \"back\") {\n                        setStage(\"reflect\");\n                        await write(\"returning to reflection.\", \"muted\");\n                        return;\n                    }\n                    await write(\"available: /publish /back\", \"muted\");\n                    return;\n                }\n            case \"create-node\":\n                {\n                    if (cmd === \"home\") {\n                        setStage(\"origin\");\n                        setLines([]); // Clear terminal completely\n                        await boot();\n                        return;\n                    }\n                    if (cmd === \"cancel\") {\n                        setShowNodeForm(false);\n                        setStage(\"lineage\");\n                        await write(\"node creation cancelled.\", \"muted\");\n                        return;\n                    }\n                    await write(\"use the form above to create your node, or /cancel to go back.\", \"muted\");\n                    return;\n                }\n            case \"browse-nodes\":\n                {\n                    if (cmd === \"home\") {\n                        setStage(\"origin\");\n                        setLines([]); // Clear terminal completely\n                        await boot();\n                        return;\n                    }\n                    if (cmd === \"back\") {\n                        setStage(\"lineage\");\n                        await write(\"returning to exploration.\", \"muted\");\n                        return;\n                    }\n                    if (cmd === \"node\") {\n                        if ((userIdentity === null || userIdentity === void 0 ? void 0 : userIdentity.name) === \"guest\") {\n                            await write(\"guests cannot create nodes. create an account to participate.\", \"muted\");\n                            return;\n                        }\n                        setStage(\"create-node\");\n                        setShowNodeForm(true);\n                        return;\n                    }\n                    if (cmd === \"search\") {\n                        await write(\"search functionality coming soon.\", \"muted\");\n                        return;\n                    }\n                    if (cmd === \"filter\") {\n                        await write(\"filter functionality coming soon.\", \"muted\");\n                        return;\n                    }\n                    await write(\"available: /back \\xb7 /node \\xb7 /search \\xb7 /filter\", \"muted\");\n                    return;\n                }\n            case \"node-detail\":\n                {\n                    if (cmd === \"home\") {\n                        setStage(\"origin\");\n                        setLines([]); // Clear terminal completely\n                        await boot();\n                        return;\n                    }\n                    if (cmd === \"back\") {\n                        setStage(\"browse-nodes\");\n                        await write(\"returning to node browser.\", \"muted\");\n                        return;\n                    }\n                    if (cmd === \"link\") {\n                        await write(\"link creation coming soon.\", \"muted\");\n                        return;\n                    }\n                    if (cmd === \"tend\") {\n                        await write(\"node tending coming soon.\", \"muted\");\n                        return;\n                    }\n                    if (cmd === \"edit\") {\n                        await write(\"node editing coming soon.\", \"muted\");\n                        return;\n                    }\n                    await write(\"available: /back \\xb7 /link \\xb7 /tend \\xb7 /edit\", \"muted\");\n                    return;\n                }\n            default:\n                await write(\"command not handled in this stage.\", \"muted\");\n        }\n    }\n    async function handleJoin() {\n        setAccountStep(\"name\");\n        setStage(\"login\");\n        const content = \"do you have an account?\\n\\njust type your username below:\";\n        await showNewScreen(\"LOGIN\", content, \"type your username:\");\n    }\n    async function handleReflect() {\n        setAccountStep(\"name\");\n        setStage(\"login\");\n        const content = \"do you have an account?\\n\\njust type your username below:\";\n        await showNewScreen(\"LOGIN\", content, \"type your username:\");\n    }\n    async function runOrient() {\n        orientIndexRef.current = 0;\n        setStage(\"orient\");\n        setLines([]);\n        await write(\"orientation initiated…\", \"muted\");\n        await showOrientScreen();\n    }\n    async function showOrientScreen() {\n        const content = \"welcome to FIELD NODES\\n──────────────────────────────────────────────\\na shared environment for collaborative thinking\\neach idea lives as a node—connected, editable,\\nand part of a collective field of knowledge\\n──────────────────────────────────────────────\\n\\n\\uD83D\\uDCD6 ABOUT\\nField Nodes is not social media or a feed.\\nIt's a collaborative workspace where participants\\ncreate, connect, and care for ideas.\\nYou can explore existing nodes, add your own,\\nor reflect on others.\\n\\n\\uD83E\\uDDED BASIC COMMANDS\\n   /orient     see this guide again\\n   /explore    browse existing fields and nodes\\n   /help       list all available commands\\n\\n\\uD83D\\uDCA1 BEST PRACTICES\\n   • move slowly — context matters\\n   • listen before adding\\n   • name things clearly so others can find them\\n   • credit existing connections when you extend them\";\n        await showNewScreen(\"ORIENTATION\", content, \"press Enter to continue or /explore to skip\");\n    }\n    async function showNewScreen(title, content, prompt) {\n        // Clear screen and show new context\n        setLines([]);\n        await pause(200);\n        // Show screen title\n        await write(\"┌─ \".concat(title, \" ─────────────────────────────────────────┐\"));\n        await pause(100);\n        // Show content\n        await write(content);\n        await pause(200);\n        // Show prompt\n        await write(\"└───────────────────────────────────────────────────┘\");\n        await pause(100);\n        await write(prompt, \"accent\");\n    }\n    async function showPasswordScreen(name) {\n        const content = \"account creation in progress...\\n\\nname: \".concat(name, \" ✓\\npassword: [type below]\\n\\nchoose a secure password (minimum 4 characters)\");\n        await showNewScreen(\"PASSWORD SETUP\", content, \"type your password:\");\n    }\n    async function showAccountConfirmed(name) {\n        setStage(\"account-confirmed\");\n        const content = \"account created successfully!\\n\\nwelcome, \".concat(formatHandle(name), \"@fieldnodes\\nyour space has been initialized\\n\\nSTATE: exploring\\nMODE: collective\\nDATA: local-first sync ON\\n\\nready when you are.\");\n        await showNewScreen(\"ACCOUNT CONFIRMED\", content, \"press Enter to begin exploring\");\n    }\n    async function showCovenant() {\n        setStage(\"covenant\");\n        const content = \"Before joining, review our shared principles:\\n\\n• Knowledge here is collective, additive, and attributed.\\n• We design for care, not competition.\\n• Contributions can be linked, forked, and preserved with credit.\\n• We honor pacing, rest, and context.\\n• We reject harassment, extraction, and scarcity.\\n\\nTo participate, you must agree to uphold these values.\";\n        await showNewScreen(\"FIELD NODES COVENANT\", content, \"type /agree to continue or /policy to review terms\");\n    }\n    async function showIdentityIntro() {\n        setStage(\"identify\");\n        setAccountStep(\"name\");\n        const content = \"to write and create in the field, you need an account:\\n\\nchoose a name: [type below]\\nchoose a password: [type below]\\n\\nAlready have an account? type /login\\nWant to browse first? type /guest\";\n        await showNewScreen(\"ACCOUNT CREATION\", content, \"type your name below:\");\n    }\n    async function showExplorationIntro(nameOverride) {\n        setStage(\"lineage\");\n        const handle = \"\".concat(formatHandle(nameOverride !== null && nameOverride !== void 0 ? nameOverride : userIdentity === null || userIdentity === void 0 ? void 0 : userIdentity.name), \"@fieldnodes\");\n        const content = \"┌─ EXPLORATION MODE ──────────────────────────┐\\n│  welcome to the field of collaborative     │\\n│  thinking and knowledge building            │\\n└─────────────────────────────────────────────┘\\n\\n\\uD83D\\uDCCD YOU ARE HERE\\n   \".concat(handle, \"\\n   STATE: exploring | MODE: collective\\n\\n\\uD83D\\uDCA1 TIP\\n   create nodes to start building the field\\n   every node needs evidence — links, images, videos, or files\");\n        await showNewScreen(\"EXPLORATION MODE\", content, \"type /node to create your first node, or /lineage to explore fields\");\n    }\n    async function showBrowseNodes() {\n        setStage(\"browse-nodes\");\n        const nodes = _services_storage__WEBPACK_IMPORTED_MODULE_5__.NodeStorage.getAllNodes();\n        setBrowseNodes(nodes);\n        if (nodes.length === 0) {\n            const content = \"no nodes found yet.\\n\\ncreate the first node to start building the field.\\n\\nevery node needs evidence — links, images, videos, or files.\";\n            await showNewScreen(\"BROWSE NODES\", content, \"type /node to create the first node\");\n            return;\n        }\n        const content = \"found \".concat(nodes.length, \" nodes in the field:\\n\\n\").concat(nodes.slice(0, 10).map((node, i)=>\"[\".concat(i + 1, \"] \").concat(node.title, \" [\").concat(node.status, \"] by @\").concat(node.author, \" (\").concat(node.connectionCount, \" connections)\")).join(\"\\n\"), \"\\n\\n\").concat(nodes.length > 10 ? \"... and \".concat(nodes.length - 10, \" more\") : \"\", \"\\n\\nclick a node number to view details\");\n        await showNewScreen(\"BROWSE NODES\", content, \"type node number to view, /node to create, or /back to return\");\n    }\n    async function handleNodeCreated(nodeData) {\n        setShowNodeForm(false);\n        setStage(\"lineage\");\n        // Convert RawNodeEditor data to Node format\n        const node = {\n            id: nodeData.id,\n            title: nodeData.statement,\n            thought: nodeData.description,\n            origin: {\n                type: \"other\",\n                description: nodeData.sources.join(\", \") || \"No source provided\"\n            },\n            artifacts: nodeData.sources.map((source)=>({\n                    type: \"url\",\n                    url: source,\n                    metadata: {\n                        title: source\n                    }\n                })),\n            tags: [],\n            suggestedConnections: [],\n            connections: [],\n            status: nodeData.status,\n            reviewMetadata: nodeData.reviewMetadata,\n            systemContext: {\n                layer: \"raw\",\n                description: \"A foundational thought unit in the Field system\",\n                instructions: \"This is a raw node that can be expanded, linked, and refined over time\"\n            },\n            author: nodeData.author,\n            createdAt: nodeData.createdAt,\n            updatedAt: nodeData.updatedAt,\n            lastTended: nodeData.createdAt,\n            connectionCount: 0\n        };\n        // Save to storage\n        _services_storage__WEBPACK_IMPORTED_MODULE_5__.NodeStorage.saveNode(node);\n        const statusMessage = node.status === \"grounded\" ? \"your node is grounded with sources and ready for review.\" : \"your node is in draft state. add sources to ground it.\";\n        await write(\"node created: \".concat(node.id, ' \"').concat(node.title, '\"'));\n        await write(statusMessage);\n        await write(\"type /browse to see all nodes, or /node to create another.\");\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            minHeight: \"100dvh\",\n            background: palette.bg,\n            color: palette.ink,\n            fontFamily: \"'IBM Plex Mono', ui-monospace, SFMono-Regular, Menlo, Consolas, monospace\",\n            padding: \"32px 16px\"\n        },\n        className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n            [\n                \"4b71c4ed7a781d93\",\n                [\n                    palette.bg\n                ]\n            ]\n        ]),\n        children: [\n            showNodeForm ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_RawNodeEditor__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                user: {\n                    isAuthenticated: (userIdentity === null || userIdentity === void 0 ? void 0 : userIdentity.name) !== \"guest\",\n                    handle: (userIdentity === null || userIdentity === void 0 ? void 0 : userIdentity.name) || \"guest\"\n                },\n                onSeed: handleNodeCreated,\n                onCancel: ()=>{\n                    setShowNodeForm(false);\n                    setStage(\"lineage\");\n                },\n                onSignIn: ()=>{\n                // Handle sign in - could open a modal or redirect\n                // TODO: Implement sign in modal or redirect\n                }\n            }, void 0, false, {\n                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                lineNumber: 1076,\n                columnNumber: 9\n            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: styles.frameWrap,\n                className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                    [\n                        \"4b71c4ed7a781d93\",\n                        [\n                            palette.bg\n                        ]\n                    ]\n                ]),\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    style: styles.frame,\n                    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                        [\n                            \"4b71c4ed7a781d93\",\n                            [\n                                palette.bg\n                            ]\n                        ]\n                    ]),\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: styles.output,\n                            dangerouslySetInnerHTML: {\n                                __html: lines.join(\"\\n\")\n                            },\n                            className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                [\n                                    \"4b71c4ed7a781d93\",\n                                    [\n                                        palette.bg\n                                    ]\n                                ]\n                            ])\n                        }, void 0, false, {\n                            fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                            lineNumber: 1094,\n                            columnNumber: 9\n                        }, this),\n                        (stage === \"origin\" || stage === \"lineage\" || stage === \"reflect\" || stage === \"link\") && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                marginTop: 24,\n                                padding: 20,\n                                background: \"rgba(11, 11, 13, 0.6)\",\n                                border: \"1px solid #2a2a30\",\n                                borderRadius: 12,\n                                backdropFilter: \"blur(8px)\"\n                            },\n                            className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                [\n                                    \"4b71c4ed7a781d93\",\n                                    [\n                                        palette.bg\n                                    ]\n                                ]\n                            ]),\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    style: {\n                                        color: palette.magenta,\n                                        marginBottom: 16,\n                                        fontSize: \"14px\",\n                                        fontWeight: 500,\n                                        letterSpacing: \"0.5px\",\n                                        textTransform: \"uppercase\"\n                                    },\n                                    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                        [\n                                            \"4b71c4ed7a781d93\",\n                                            [\n                                                palette.bg\n                                            ]\n                                        ]\n                                    ]),\n                                    children: \"Available Actions\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                                    lineNumber: 1102,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    style: {\n                                        display: \"grid\",\n                                        gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\n                                        gap: 12\n                                    },\n                                    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                        [\n                                            \"4b71c4ed7a781d93\",\n                                            [\n                                                palette.bg\n                                            ]\n                                        ]\n                                    ]),\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleCommand(\"/node\"),\n                                            style: {\n                                                padding: \"14px 18px\",\n                                                background: \"linear-gradient(135deg, \".concat(palette.magenta, \"22, \").concat(palette.orchid, \"11)\"),\n                                                border: \"1px solid \".concat(palette.magenta, \"44\"),\n                                                borderRadius: 8,\n                                                color: palette.ink,\n                                                fontSize: \"15px\",\n                                                cursor: \"pointer\",\n                                                transition: \"all 0.2s ease\",\n                                                fontFamily: \"inherit\",\n                                                textAlign: \"left\",\n                                                display: \"flex\",\n                                                flexDirection: \"column\",\n                                                gap: 4,\n                                                boxShadow: \"0 2px 8px \".concat(palette.magenta, \"11\")\n                                            },\n                                            onMouseEnter: (e)=>{\n                                                e.currentTarget.style.background = \"linear-gradient(135deg, \".concat(palette.magenta, \"33, \").concat(palette.orchid, \"22)\");\n                                                e.currentTarget.style.borderColor = palette.magenta;\n                                                e.currentTarget.style.transform = \"translateY(-2px)\";\n                                                e.currentTarget.style.boxShadow = \"0 4px 12px \".concat(palette.magenta, \"22\");\n                                            },\n                                            onMouseLeave: (e)=>{\n                                                e.currentTarget.style.background = \"linear-gradient(135deg, \".concat(palette.magenta, \"22, \").concat(palette.orchid, \"11)\");\n                                                e.currentTarget.style.borderColor = \"\".concat(palette.magenta, \"44\");\n                                                e.currentTarget.style.transform = \"translateY(0)\";\n                                                e.currentTarget.style.boxShadow = \"0 2px 8px \".concat(palette.magenta, \"11\");\n                                            },\n                                            className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                                [\n                                                    \"4b71c4ed7a781d93\",\n                                                    [\n                                                        palette.bg\n                                                    ]\n                                                ]\n                                            ]),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    style: {\n                                                        color: palette.lilac,\n                                                        fontWeight: 500\n                                                    },\n                                                    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                                        [\n                                                            \"4b71c4ed7a781d93\",\n                                                            [\n                                                                palette.bg\n                                                            ]\n                                                        ]\n                                                    ]),\n                                                    children: \"/node\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                                                    lineNumber: 1135,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    style: {\n                                                        color: palette.muted,\n                                                        fontSize: \"13px\"\n                                                    },\n                                                    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                                        [\n                                                            \"4b71c4ed7a781d93\",\n                                                            [\n                                                                palette.bg\n                                                            ]\n                                                        ]\n                                                    ]),\n                                                    children: \"create new node\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                                                    lineNumber: 1136,\n                                                    columnNumber: 17\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                                            lineNumber: 1104,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleCommand(\"/browse\"),\n                                            style: {\n                                                padding: \"14px 18px\",\n                                                background: \"linear-gradient(135deg, \".concat(palette.lilac, \"22, \").concat(palette.orchid, \"11)\"),\n                                                border: \"1px solid \".concat(palette.lilac, \"44\"),\n                                                borderRadius: 8,\n                                                color: palette.ink,\n                                                fontSize: \"15px\",\n                                                cursor: \"pointer\",\n                                                transition: \"all 0.2s ease\",\n                                                fontFamily: \"inherit\",\n                                                textAlign: \"left\",\n                                                display: \"flex\",\n                                                flexDirection: \"column\",\n                                                gap: 4,\n                                                boxShadow: \"0 2px 8px \".concat(palette.lilac, \"11\")\n                                            },\n                                            onMouseEnter: (e)=>{\n                                                e.currentTarget.style.background = \"linear-gradient(135deg, \".concat(palette.lilac, \"33, \").concat(palette.orchid, \"22)\");\n                                                e.currentTarget.style.borderColor = palette.lilac;\n                                                e.currentTarget.style.transform = \"translateY(-2px)\";\n                                                e.currentTarget.style.boxShadow = \"0 4px 12px \".concat(palette.lilac, \"22\");\n                                            },\n                                            onMouseLeave: (e)=>{\n                                                e.currentTarget.style.background = \"linear-gradient(135deg, \".concat(palette.lilac, \"22, \").concat(palette.orchid, \"11)\");\n                                                e.currentTarget.style.borderColor = \"\".concat(palette.lilac, \"44\");\n                                                e.currentTarget.style.transform = \"translateY(0)\";\n                                                e.currentTarget.style.boxShadow = \"0 2px 8px \".concat(palette.lilac, \"11\");\n                                            },\n                                            className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                                [\n                                                    \"4b71c4ed7a781d93\",\n                                                    [\n                                                        palette.bg\n                                                    ]\n                                                ]\n                                            ]),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    style: {\n                                                        color: palette.lilac,\n                                                        fontWeight: 500\n                                                    },\n                                                    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                                        [\n                                                            \"4b71c4ed7a781d93\",\n                                                            [\n                                                                palette.bg\n                                                            ]\n                                                        ]\n                                                    ]),\n                                                    children: \"/browse\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                                                    lineNumber: 1170,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    style: {\n                                                        color: palette.muted,\n                                                        fontSize: \"13px\"\n                                                    },\n                                                    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                                        [\n                                                            \"4b71c4ed7a781d93\",\n                                                            [\n                                                                palette.bg\n                                                            ]\n                                                        ]\n                                                    ]),\n                                                    children: \"browse all nodes\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                                                    lineNumber: 1171,\n                                                    columnNumber: 17\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                                            lineNumber: 1139,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleCommand(\"/orient\"),\n                                            style: {\n                                                padding: \"14px 18px\",\n                                                background: \"linear-gradient(135deg, \".concat(palette.orchid, \"22, \").concat(palette.magenta, \"11)\"),\n                                                border: \"1px solid \".concat(palette.orchid, \"44\"),\n                                                borderRadius: 8,\n                                                color: palette.ink,\n                                                fontSize: \"15px\",\n                                                cursor: \"pointer\",\n                                                transition: \"all 0.2s ease\",\n                                                fontFamily: \"inherit\",\n                                                textAlign: \"left\",\n                                                display: \"flex\",\n                                                flexDirection: \"column\",\n                                                gap: 4,\n                                                boxShadow: \"0 2px 8px \".concat(palette.orchid, \"11\")\n                                            },\n                                            onMouseEnter: (e)=>{\n                                                e.currentTarget.style.background = \"linear-gradient(135deg, \".concat(palette.orchid, \"33, \").concat(palette.magenta, \"22)\");\n                                                e.currentTarget.style.borderColor = palette.orchid;\n                                                e.currentTarget.style.transform = \"translateY(-2px)\";\n                                                e.currentTarget.style.boxShadow = \"0 4px 12px \".concat(palette.orchid, \"22\");\n                                            },\n                                            onMouseLeave: (e)=>{\n                                                e.currentTarget.style.background = \"linear-gradient(135deg, \".concat(palette.orchid, \"22, \").concat(palette.magenta, \"11)\");\n                                                e.currentTarget.style.borderColor = \"\".concat(palette.orchid, \"44\");\n                                                e.currentTarget.style.transform = \"translateY(0)\";\n                                                e.currentTarget.style.boxShadow = \"0 2px 8px \".concat(palette.orchid, \"11\");\n                                            },\n                                            className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                                [\n                                                    \"4b71c4ed7a781d93\",\n                                                    [\n                                                        palette.bg\n                                                    ]\n                                                ]\n                                            ]),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    style: {\n                                                        color: palette.lilac,\n                                                        fontWeight: 500\n                                                    },\n                                                    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                                        [\n                                                            \"4b71c4ed7a781d93\",\n                                                            [\n                                                                palette.bg\n                                                            ]\n                                                        ]\n                                                    ]),\n                                                    children: \"/orient\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                                                    lineNumber: 1205,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    style: {\n                                                        color: palette.muted,\n                                                        fontSize: \"13px\"\n                                                    },\n                                                    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                                        [\n                                                            \"4b71c4ed7a781d93\",\n                                                            [\n                                                                palette.bg\n                                                            ]\n                                                        ]\n                                                    ]),\n                                                    children: \"learn about the system\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                                                    lineNumber: 1206,\n                                                    columnNumber: 17\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                                            lineNumber: 1174,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleCommand(\"/help\"),\n                                            style: {\n                                                padding: \"14px 18px\",\n                                                background: \"linear-gradient(135deg, \".concat(palette.muted, \"22, \").concat(palette.muted, \"11)\"),\n                                                border: \"1px solid \".concat(palette.muted, \"44\"),\n                                                borderRadius: 8,\n                                                color: palette.ink,\n                                                fontSize: \"15px\",\n                                                cursor: \"pointer\",\n                                                transition: \"all 0.2s ease\",\n                                                fontFamily: \"inherit\",\n                                                textAlign: \"left\",\n                                                display: \"flex\",\n                                                flexDirection: \"column\",\n                                                gap: 4,\n                                                boxShadow: \"0 2px 8px \".concat(palette.muted, \"11\")\n                                            },\n                                            onMouseEnter: (e)=>{\n                                                e.currentTarget.style.background = \"linear-gradient(135deg, \".concat(palette.muted, \"33, \").concat(palette.muted, \"22)\");\n                                                e.currentTarget.style.borderColor = palette.muted;\n                                                e.currentTarget.style.transform = \"translateY(-2px)\";\n                                                e.currentTarget.style.boxShadow = \"0 4px 12px \".concat(palette.muted, \"22\");\n                                            },\n                                            onMouseLeave: (e)=>{\n                                                e.currentTarget.style.background = \"linear-gradient(135deg, \".concat(palette.muted, \"22, \").concat(palette.muted, \"11)\");\n                                                e.currentTarget.style.borderColor = \"\".concat(palette.muted, \"44\");\n                                                e.currentTarget.style.transform = \"translateY(0)\";\n                                                e.currentTarget.style.boxShadow = \"0 2px 8px \".concat(palette.muted, \"11\");\n                                            },\n                                            className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                                [\n                                                    \"4b71c4ed7a781d93\",\n                                                    [\n                                                        palette.bg\n                                                    ]\n                                                ]\n                                            ]),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    style: {\n                                                        color: palette.lilac,\n                                                        fontWeight: 500\n                                                    },\n                                                    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                                        [\n                                                            \"4b71c4ed7a781d93\",\n                                                            [\n                                                                palette.bg\n                                                            ]\n                                                        ]\n                                                    ]),\n                                                    children: \"/help\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                                                    lineNumber: 1240,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    style: {\n                                                        color: palette.muted,\n                                                        fontSize: \"13px\"\n                                                    },\n                                                    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                                        [\n                                                            \"4b71c4ed7a781d93\",\n                                                            [\n                                                                palette.bg\n                                                            ]\n                                                        ]\n                                                    ]),\n                                                    children: \"see all commands\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                                                    lineNumber: 1241,\n                                                    columnNumber: 17\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                                            lineNumber: 1209,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                                    lineNumber: 1103,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                            lineNumber: 1101,\n                            columnNumber: 11\n                        }, this),\n                        stage === \"reflect\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                marginTop: 12\n                            },\n                            className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                [\n                                    \"4b71c4ed7a781d93\",\n                                    [\n                                        palette.bg\n                                    ]\n                                ]\n                            ]),\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    style: {\n                                        color: palette.muted\n                                    },\n                                    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                        [\n                                            \"4b71c4ed7a781d93\",\n                                            [\n                                                palette.bg\n                                            ]\n                                        ]\n                                    ]),\n                                    children: \"private buffer — finish with Ctrl/⌘+Enter\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                                    lineNumber: 1249,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                                    style: {\n                                        width: \"100%\",\n                                        minHeight: 160,\n                                        background: \"#0b0b0d\",\n                                        border: \"1px solid #2a2a30\",\n                                        color: palette.ink,\n                                        padding: 12,\n                                        borderRadius: 8,\n                                        fontFamily: \"inherit\",\n                                        fontSize: 15,\n                                        lineHeight: 1.5\n                                    },\n                                    value: draft,\n                                    onChange: (e)=>setDraft(e.target.value),\n                                    onKeyDown: (e)=>{\n                                        if ((e.ctrlKey || e.metaKey) && e.key === \"Enter\") {\n                                            push(color(\"your reflection is saved locally. type /link to connect it.\", \"muted\"));\n                                        }\n                                    },\n                                    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                        [\n                                            \"4b71c4ed7a781d93\",\n                                            [\n                                                palette.bg\n                                            ]\n                                        ]\n                                    ])\n                                }, void 0, false, {\n                                    fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                                    lineNumber: 1250,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                            lineNumber: 1248,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            ref: endRef,\n                            className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                [\n                                    \"4b71c4ed7a781d93\",\n                                    [\n                                        palette.bg\n                                    ]\n                                ]\n                            ])\n                        }, void 0, false, {\n                            fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                            lineNumber: 1259,\n                            columnNumber: 9\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: styles.promptRow,\n                            className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                [\n                                    \"4b71c4ed7a781d93\",\n                                    [\n                                        palette.bg\n                                    ]\n                                ]\n                            ]),\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    style: {\n                                        color: palette.magenta\n                                    },\n                                    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                        [\n                                            \"4b71c4ed7a781d93\",\n                                            [\n                                                palette.bg\n                                            ]\n                                        ]\n                                    ]),\n                                    children: \">\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                                    lineNumber: 1262,\n                                    columnNumber: 11\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    style: styles.promptCaret,\n                                    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                        [\n                                            \"4b71c4ed7a781d93\",\n                                            [\n                                                palette.bg\n                                            ]\n                                        ]\n                                    ])\n                                }, void 0, false, {\n                                    fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                                    lineNumber: 1263,\n                                    columnNumber: 11\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    style: styles.promptInputWrap,\n                                    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                        [\n                                            \"4b71c4ed7a781d93\",\n                                            [\n                                                palette.bg\n                                            ]\n                                        ]\n                                    ]),\n                                    children: [\n                                        suggestion && suggestion !== input && suggestion.startsWith(input) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            style: styles.promptSuggestion,\n                                            className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                                [\n                                                    \"4b71c4ed7a781d93\",\n                                                    [\n                                                        palette.bg\n                                                    ]\n                                                ]\n                                            ]),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    style: {\n                                                        opacity: 0\n                                                    },\n                                                    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                                        [\n                                                            \"4b71c4ed7a781d93\",\n                                                            [\n                                                                palette.bg\n                                                            ]\n                                                        ]\n                                                    ]),\n                                                    children: input\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                                                    lineNumber: 1267,\n                                                    columnNumber: 17\n                                                }, this),\n                                                suggestion.slice(input.length)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                                            lineNumber: 1266,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                            value: input,\n                                            onChange: (e)=>setInput(e.target.value),\n                                            onKeyDown: (e)=>{\n                                                if ((e.key === \"Tab\" || e.key === \"ArrowRight\") && suggestion) {\n                                                    e.preventDefault();\n                                                    setInput(suggestion);\n                                                    return;\n                                                }\n                                                if (e.key === \"Enter\") {\n                                                    handleCommand(input);\n                                                }\n                                            },\n                                            spellCheck: false,\n                                            style: styles.promptInput,\n                                            ref: inputRef,\n                                            autoFocus: true,\n                                            className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                                                [\n                                                    \"4b71c4ed7a781d93\",\n                                                    [\n                                                        palette.bg\n                                                    ]\n                                                ]\n                                            ])\n                                        }, void 0, false, {\n                                            fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                                            lineNumber: 1271,\n                                            columnNumber: 13\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                                    lineNumber: 1264,\n                                    columnNumber: 11\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                            lineNumber: 1261,\n                            columnNumber: 9\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                    lineNumber: 1093,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                lineNumber: 1092,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"style\", {\n                children: \"\\n        @keyframes blink { 0%{opacity:.2} 50%{opacity:1} 100%{opacity:.2} }\\n      \"\n            }, void 0, false, {\n                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n                lineNumber: 1295,\n                columnNumber: 7\n            }, this),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default()), {\n                id: \"4b71c4ed7a781d93\",\n                dynamic: [\n                    palette.bg\n                ],\n                children: \"html,body{margin:0;background:\".concat(palette.bg, \"}\")\n            }, void 0, false, void 0, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/candacestewart/fieldnodes-react/src/components/FieldNodesTerminal.tsx\",\n        lineNumber: 1066,\n        columnNumber: 5\n    }, this);\n}\n_s(FieldNodesTerminal, \"OFEgNSfRIvU4B/dp9YHXJA1T2q8=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_3__.useRouter\n    ];\n});\n_c = FieldNodesTerminal;\nfunction getSuggestion(value, stage) {\n    if (!value.startsWith(\"/\")) return \"\";\n    const options = stageCommands[stage] || [];\n    const match = options.find((cmd)=>cmd.startsWith(value));\n    if (!match) return \"\";\n    return match === value ? \"\" : match;\n}\nvar _c;\n$RefreshReg$(_c, \"FieldNodesTerminal\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/FieldNodesTerminal.tsx\n"));

/***/ }),

/***/ "./src/components/RawNodeEditor.tsx":
/*!******************************************!*\
  !*** ./src/components/RawNodeEditor.tsx ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ RawNodeEditor; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n\nvar _s = $RefreshSig$();\n\n\nconst palette = {\n    accent: \"#FF3EB5\",\n    bg: \"#0E0E10\",\n    textPrimary: \"#F5EDEE\",\n    textSecondary: \"#9AA0A6\",\n    divider: \"#1C1C1F\",\n    helpBg: \"#141416\",\n    disabledGradient: \"linear-gradient(135deg, #3a3a3a 0%, #555 100%)\",\n    guestBannerBg: \"rgba(255,62,181,0.08)\",\n    guestBannerBorder: \"#2A2A2D\"\n};\nconst styles = {\n    container: {\n        background: palette.bg,\n        border: \"1px solid #222\",\n        borderRadius: \"12px\",\n        padding: \"24px\",\n        fontFamily: \"'IBM Plex Sans', -apple-system, BlinkMacSystemFont, sans-serif\",\n        maxWidth: \"600px\",\n        margin: \"0 auto\",\n        boxShadow: \"0 4px 20px rgba(0,0,0,0.3)\",\n        boxSizing: \"border-box\"\n    },\n    guestBanner: {\n        background: palette.guestBannerBg,\n        color: palette.accent,\n        fontFamily: \"'IBM Plex Mono', ui-monospace, monospace\",\n        fontSize: \"13px\",\n        padding: \"10px 14px\",\n        borderBottom: \"1px solid \".concat(palette.guestBannerBorder),\n        cursor: \"pointer\",\n        textAlign: \"center\",\n        transition: \"all 0.2s ease\"\n    },\n    headerRow: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(6, 1fr)\",\n        gap: \"12px\",\n        padding: \"12px 16px\",\n        borderBottom: \"1px solid \".concat(palette.divider),\n        fontFamily: \"'IBM Plex Mono', ui-monospace, monospace\",\n        fontSize: \"13px\",\n        textTransform: \"uppercase\",\n        letterSpacing: \"0.5px\"\n    },\n    headerField: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"4px\"\n    },\n    headerLabel: {\n        color: palette.textSecondary,\n        fontSize: \"11px\",\n        fontWeight: \"500\"\n    },\n    headerValue: {\n        color: palette.textPrimary,\n        fontSize: \"13px\",\n        fontWeight: \"600\"\n    },\n    helpBlock: {\n        background: palette.helpBg,\n        padding: \"18px 20px\",\n        borderRadius: \"10px\",\n        margin: \"16px\",\n        fontSize: \"13px\",\n        lineHeight: \"1.6\",\n        color: palette.textSecondary\n    },\n    helpHeader: {\n        color: palette.accent,\n        fontWeight: \"600\",\n        marginBottom: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: \"6px\"\n    },\n    helpText: {\n        margin: \"0\"\n    },\n    formSection: {\n        padding: \"16px\"\n    },\n    fieldGroup: {\n        marginBottom: \"20px\"\n    },\n    fieldLabel: {\n        display: \"block\",\n        color: palette.textPrimary,\n        fontSize: \"14px\",\n        fontWeight: \"500\",\n        marginBottom: \"8px\"\n    },\n    input: {\n        width: \"100%\",\n        background: \"transparent\",\n        borderWidth: \"1px\",\n        borderStyle: \"solid\",\n        borderColor: palette.divider,\n        borderRadius: \"8px\",\n        padding: \"12px 14px\",\n        color: palette.textPrimary,\n        fontSize: \"14px\",\n        fontFamily: \"inherit\",\n        outline: \"none\",\n        transition: \"all 0.2s ease\",\n        boxSizing: \"border-box\",\n        maxWidth: \"100%\"\n    },\n    inputFocused: {\n        borderColor: palette.accent,\n        boxShadow: \"0 0 0 2px rgba(255, 62, 181, 0.1)\"\n    },\n    textInput: {\n        resize: \"none\"\n    },\n    textarea: {\n        minHeight: \"80px\",\n        maxHeight: \"120px\",\n        resize: \"vertical\",\n        boxSizing: \"border-box\",\n        maxWidth: \"100%\"\n    },\n    sourcesContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"8px\"\n    },\n    sourceItem: {\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: \"8px\",\n        padding: \"8px 12px\",\n        background: palette.helpBg,\n        borderRadius: \"6px\",\n        fontSize: \"13px\"\n    },\n    sourceText: {\n        flex: 1,\n        color: palette.textPrimary\n    },\n    removeSource: {\n        background: \"none\",\n        border: \"none\",\n        color: palette.textSecondary,\n        cursor: \"pointer\",\n        fontSize: \"16px\",\n        padding: \"0\",\n        width: \"20px\",\n        height: \"20px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        borderRadius: \"50%\",\n        transition: \"all 0.2s ease\"\n    },\n    actionButtons: {\n        display: \"flex\",\n        gap: \"12px\",\n        padding: \"16px\",\n        borderTop: \"1px solid \".concat(palette.divider)\n    },\n    button: {\n        flex: 1,\n        padding: \"12px 20px\",\n        borderRadius: \"8px\",\n        border: \"none\",\n        fontSize: \"14px\",\n        fontWeight: \"500\",\n        cursor: \"pointer\",\n        transition: \"all 0.2s ease\",\n        fontFamily: \"inherit\"\n    },\n    cancelButton: {\n        background: \"transparent\",\n        color: palette.textSecondary,\n        border: \"1px solid \".concat(palette.divider)\n    },\n    seedButton: {\n        background: palette.accent,\n        color: \"white\",\n        border: \"none\"\n    },\n    seedButtonDisabled: {\n        background: palette.disabledGradient,\n        color: palette.textSecondary,\n        cursor: \"not-allowed\",\n        border: \"none\"\n    },\n    characterCount: {\n        fontSize: \"12px\",\n        color: palette.textSecondary,\n        textAlign: \"right\",\n        marginTop: \"4px\"\n    }\n};\nfunction RawNodeEditor(param) {\n    let { user, onSeed, onCancel, onSignIn } = param;\n    _s();\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const [form, setForm] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        statement: \"\",\n        description: \"\",\n        sources: [],\n        status: \"draft\"\n    });\n    const [isSaving, setIsSaving] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [focusedField, setFocusedField] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [newSource, setNewSource] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const statementRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const descriptionRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const sourceRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Auto-save for guests\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!user.isAuthenticated && (form.statement || form.description || form.sources.length > 0)) {\n            localStorage.setItem(\"rawNodeDraft\", JSON.stringify(form));\n        }\n    }, [\n        form,\n        user.isAuthenticated\n    ]);\n    // Load draft on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const savedDraft = localStorage.getItem(\"rawNodeDraft\");\n        if (savedDraft && !user.isAuthenticated) {\n            try {\n                const draft = JSON.parse(savedDraft);\n                setForm(draft);\n            } catch (e) {\n                console.error(\"Failed to load draft:\", e);\n            }\n        }\n    }, [\n        user.isAuthenticated\n    ]);\n    const handleInputChange = (field, value)=>{\n        setForm((prev)=>({\n                ...prev,\n                [field]: value\n            }));\n    };\n    const handleAddSource = ()=>{\n        if (newSource.trim() && !form.sources.includes(newSource.trim())) {\n            const newSources = [\n                ...form.sources,\n                newSource.trim()\n            ];\n            const newStatus = user.isAuthenticated && newSources.length > 0 ? \"grounded\" : \"draft\";\n            setForm((prev)=>({\n                    ...prev,\n                    sources: newSources,\n                    status: newStatus\n                }));\n            setNewSource(\"\");\n        }\n    };\n    const handleRemoveSource = (index)=>{\n        const newSources = form.sources.filter((_, i)=>i !== index);\n        const newStatus = newSources.length === 0 ? \"draft\" : form.status;\n        setForm((prev)=>({\n                ...prev,\n                sources: newSources,\n                status: newStatus\n            }));\n    };\n    const handleKeyPress = (e, action)=>{\n        if (e.key === \"Enter\" && !e.shiftKey) {\n            e.preventDefault();\n            action();\n        }\n    };\n    const handleSeed = async ()=>{\n        if (!user.isAuthenticated) {\n            onSignIn === null || onSignIn === void 0 ? void 0 : onSignIn();\n            return;\n        }\n        if (!form.statement.trim()) {\n            return;\n        }\n        setIsSaving(true);\n        try {\n            const nodeData = {\n                id: \"FM-RN.\".concat(Date.now().toString().slice(-3)),\n                type: \"RawNode\",\n                author: user.handle || \"anonymous\",\n                status: form.status,\n                statement: form.statement.trim(),\n                description: form.description.trim(),\n                sources: form.sources,\n                createdAt: new Date().toISOString(),\n                updatedAt: new Date().toISOString(),\n                reviewMetadata: undefined // Will be added by reviewers later\n            };\n            // Clear local draft\n            localStorage.removeItem(\"rawNodeDraft\");\n            // Call parent handler\n            onSeed === null || onSeed === void 0 ? void 0 : onSeed(nodeData);\n            // Show success feedback\n            // Success message is handled by the parent component\n            // Reset form\n            setForm({\n                statement: \"\",\n                description: \"\",\n                sources: [],\n                status: \"draft\"\n            });\n        } catch (error) {\n            console.error(\"Failed to seed node:\", error);\n        } finally{\n            setIsSaving(false);\n        }\n    };\n    const handleCancel = ()=>{\n        setForm({\n            statement: \"\",\n            description: \"\",\n            sources: [],\n            status: \"draft\"\n        });\n        localStorage.removeItem(\"rawNodeDraft\");\n        onCancel === null || onCancel === void 0 ? void 0 : onCancel();\n    };\n    const getCurrentDate = ()=>{\n        return new Date().toLocaleDateString(\"en-US\", {\n            month: \"2-digit\",\n            day: \"2-digit\",\n            year: \"numeric\"\n        });\n    };\n    const getStatus = ()=>{\n        return form.status;\n    };\n    const getStatusColor = (status)=>{\n        switch(status){\n            case \"draft\":\n                return \"#9AA0A6\";\n            case \"grounded\":\n                return \"#4CAF50\";\n            case \"reviewed\":\n                return \"#2196F3\";\n            case \"canonical\":\n                return \"#FF3EB5\";\n            case \"needs_revision\":\n                return \"#FF9800\";\n            default:\n                return \"#9AA0A6\";\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: styles.container,\n        children: [\n            !user.isAuthenticated && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: styles.guestBanner,\n                onClick: onSignIn,\n                onMouseEnter: (e)=>{\n                    e.currentTarget.style.background = \"rgba(255,62,181,0.12)\";\n                },\n                onMouseLeave: (e)=>{\n                    e.currentTarget.style.background = palette.guestBannerBg;\n                },\n                children: \"⚠️ You're in guest mode — sign in to seed your notes.\"\n            }, void 0, false, {\n                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                lineNumber: 376,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: styles.headerRow,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: styles.headerField,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: styles.headerLabel,\n                                children: \"Type\"\n                            }, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 393,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: styles.headerValue,\n                                children: \"Raw Node\"\n                            }, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 394,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                        lineNumber: 392,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: styles.headerField,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: styles.headerLabel,\n                                children: \"Created\"\n                            }, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 397,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: styles.headerValue,\n                                children: getCurrentDate()\n                            }, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 398,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                        lineNumber: 396,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: styles.headerField,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: styles.headerLabel,\n                                children: \"Author\"\n                            }, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 401,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: styles.headerValue,\n                                children: user.handle || \"guest\"\n                            }, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 402,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                        lineNumber: 400,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: styles.headerField,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: styles.headerLabel,\n                                children: \"Status\"\n                            }, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 405,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: {\n                                    ...styles.headerValue,\n                                    color: getStatusColor(form.status)\n                                },\n                                children: getStatus()\n                            }, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 406,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                        lineNumber: 404,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: styles.headerField,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: styles.headerLabel,\n                                children: \"Reviewer\"\n                            }, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 411,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: styles.headerValue,\n                                children: \"—\"\n                            }, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 412,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                        lineNumber: 410,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: styles.headerField,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: styles.headerLabel,\n                                children: \"Trust\"\n                            }, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 415,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: styles.headerValue,\n                                children: \"—\"\n                            }, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 416,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                        lineNumber: 414,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                lineNumber: 391,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: styles.helpBlock,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: styles.helpHeader,\n                        children: \"\\uD83D\\uDCA1 What is a Raw Node?\"\n                    }, void 0, false, {\n                        fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                        lineNumber: 422,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        style: styles.helpText,\n                        children: [\n                            \"A \",\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                children: \"Raw Node\"\n                            }, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 426,\n                                columnNumber: 13\n                            }, this),\n                            \" is the foundational thought unit in the Field system — a single idea, question, or observation that can connect to others later.\",\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 427,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 427,\n                                columnNumber: 17\n                            }, this),\n                            \"It captures:\",\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 429,\n                                columnNumber: 11\n                            }, this),\n                            \"• \",\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                children: \"What\"\n                            }, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 429,\n                                columnNumber: 19\n                            }, this),\n                            \" you observed or thought\",\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 430,\n                                columnNumber: 11\n                            }, this),\n                            \"• \",\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                children: \"Where\"\n                            }, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 430,\n                                columnNumber: 19\n                            }, this),\n                            \" it came from (text, source, or context)\",\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 431,\n                                columnNumber: 11\n                            }, this),\n                            \"• \",\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                children: \"Why\"\n                            }, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 431,\n                                columnNumber: 19\n                            }, this),\n                            \" it matters or feels connected\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                        lineNumber: 425,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                lineNumber: 421,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: styles.formSection,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: styles.fieldGroup,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                style: styles.fieldLabel,\n                                children: \"Core Thought\"\n                            }, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 439,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                ref: statementRef,\n                                type: \"text\",\n                                value: form.statement,\n                                onChange: (e)=>handleInputChange(\"statement\", e.target.value),\n                                onFocus: ()=>setFocusedField(\"statement\"),\n                                onBlur: ()=>setFocusedField(null),\n                                placeholder: \"A clear, atomic thought, question, or definition…\",\n                                style: {\n                                    ...styles.input,\n                                    ...styles.textInput,\n                                    ...focusedField === \"statement\" ? styles.inputFocused : {}\n                                }\n                            }, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 440,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                        lineNumber: 438,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: styles.fieldGroup,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                style: styles.fieldLabel,\n                                children: \"Description\"\n                            }, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 458,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                                ref: descriptionRef,\n                                value: form.description,\n                                onChange: (e)=>handleInputChange(\"description\", e.target.value),\n                                onFocus: ()=>setFocusedField(\"description\"),\n                                onBlur: ()=>setFocusedField(null),\n                                placeholder: \"Expand briefly — what sparked this thought, and why it matters?\",\n                                style: {\n                                    ...styles.input,\n                                    ...styles.textarea,\n                                    ...focusedField === \"description\" ? styles.inputFocused : {}\n                                },\n                                maxLength: 1000\n                            }, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 459,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: styles.characterCount,\n                                children: [\n                                    form.description.length,\n                                    \"/1000\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 473,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                        lineNumber: 457,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: styles.fieldGroup,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                style: styles.fieldLabel,\n                                children: \"Sources\"\n                            }, void 0, false, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 480,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: styles.sourcesContainer,\n                                children: [\n                                    form.sources.map((source, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            style: styles.sourceItem,\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    style: styles.sourceText,\n                                                    children: source\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                                    lineNumber: 484,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    type: \"button\",\n                                                    onClick: ()=>handleRemoveSource(index),\n                                                    style: styles.removeSource,\n                                                    onMouseEnter: (e)=>{\n                                                        e.currentTarget.style.background = \"rgba(255,255,255,0.1)\";\n                                                    },\n                                                    onMouseLeave: (e)=>{\n                                                        e.currentTarget.style.background = \"none\";\n                                                    },\n                                                    children: \"\\xd7\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                                    lineNumber: 485,\n                                                    columnNumber: 17\n                                                }, this)\n                                            ]\n                                        }, index, true, {\n                                            fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                            lineNumber: 483,\n                                            columnNumber: 15\n                                        }, this)),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        ref: sourceRef,\n                                        type: \"text\",\n                                        value: newSource,\n                                        onChange: (e)=>setNewSource(e.target.value),\n                                        onKeyPress: (e)=>handleKeyPress(e, handleAddSource),\n                                        onFocus: ()=>setFocusedField(\"sources\"),\n                                        onBlur: ()=>setFocusedField(null),\n                                        placeholder: \"Add a URL, citation, or artifact that grounds this idea…\",\n                                        style: {\n                                            ...styles.input,\n                                            ...styles.textInput,\n                                            ...focusedField === \"sources\" ? styles.inputFocused : {}\n                                        }\n                                    }, void 0, false, {\n                                        fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                        lineNumber: 500,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                                lineNumber: 481,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                        lineNumber: 479,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                lineNumber: 436,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: styles.actionButtons,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        type: \"button\",\n                        onClick: handleCancel,\n                        style: {\n                            ...styles.button,\n                            ...styles.cancelButton\n                        },\n                        children: \"Cancel\"\n                    }, void 0, false, {\n                        fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                        lineNumber: 521,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        type: \"button\",\n                        onClick: handleSeed,\n                        disabled: isSaving || !user.isAuthenticated && !form.statement.trim(),\n                        style: {\n                            ...styles.button,\n                            ...user.isAuthenticated ? styles.seedButton : styles.seedButtonDisabled\n                        },\n                        children: isSaving ? \"Seeding…\" : user.isAuthenticated ? \"Seed\" : \"Sign in to Seed\"\n                    }, void 0, false, {\n                        fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                        lineNumber: 531,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n                lineNumber: 520,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/candacestewart/fieldnodes-react/src/components/RawNodeEditor.tsx\",\n        lineNumber: 373,\n        columnNumber: 5\n    }, this);\n}\n_s(RawNodeEditor, \"GyDPgJZ4tBnJiuqzXB88g8ECGKs=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter\n    ];\n});\n_c = RawNodeEditor;\nvar _c;\n$RefreshReg$(_c, \"RawNodeEditor\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/RawNodeEditor.tsx\n"));

/***/ }),

/***/ "./src/services/storage.ts":
/*!*********************************!*\
  !*** ./src/services/storage.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NODE_TYPE_INFO: function() { return /* binding */ NODE_TYPE_INFO; },\n/* harmony export */   NodeStorage: function() { return /* binding */ NodeStorage; }\n/* harmony export */ });\n// Field Nodes Storage Service\n// Local-first storage using localStorage with JSON serialization\nconst STORAGE_KEYS = {\n    NODES: \"fieldnodes_nodes\",\n    FIELDS: \"fieldnodes_fields\",\n    USERS: \"fieldnodes_users\",\n    SETTINGS: \"fieldnodes_settings\",\n    NODE_COUNTERS: \"fieldnodes_node_counters\"\n};\nconst NODE_TYPE_INFO = {\n    RN: {\n        name: \"Raw Node\",\n        description: \"Foundational thought / observation (atomic)\"\n    },\n    CN: {\n        name: \"Context Node\",\n        description: \"Expands or annotates a raw node\"\n    },\n    SN: {\n        name: \"Support Node\",\n        description: \"External materials (citations, links, evidence)\"\n    },\n    RF: {\n        name: \"Reflection Node\",\n        description: \"Reflective or meta-analysis note\"\n    },\n    SY: {\n        name: \"System Node\",\n        description: \"Internal structure (rules, templates, system definitions)\"\n    }\n};\nclass NodeStorage {\n    // Node management\n    static saveNode(node) {\n        try {\n            const nodes = this.getAllNodes();\n            const existingIndex = nodes.findIndex((n)=>n.id === node.id);\n            if (existingIndex >= 0) {\n                nodes[existingIndex] = {\n                    ...node,\n                    updatedAt: new Date().toISOString()\n                };\n            } else {\n                nodes.push({\n                    ...node,\n                    createdAt: new Date().toISOString(),\n                    updatedAt: new Date().toISOString()\n                });\n            }\n            localStorage.setItem(STORAGE_KEYS.NODES, JSON.stringify(nodes));\n        } catch (error) {\n            console.error(\"Failed to save node:\", error);\n            throw new Error(\"Failed to save node to storage\");\n        }\n    }\n    static getNode(id) {\n        try {\n            const nodes = this.getAllNodes();\n            return nodes.find((n)=>n.id === id) || null;\n        } catch (error) {\n            console.error(\"Failed to get node:\", error);\n            return null;\n        }\n    }\n    static getAllNodes() {\n        try {\n            const stored = localStorage.getItem(STORAGE_KEYS.NODES);\n            return stored ? JSON.parse(stored) : [];\n        } catch (error) {\n            console.error(\"Failed to get nodes:\", error);\n            return [];\n        }\n    }\n    static getNodesByField(fieldId) {\n        const nodes = this.getAllNodes();\n        return nodes.filter((node)=>node.tags.some((tag)=>tag.toLowerCase().includes(fieldId.toLowerCase())) || node.origin.description.toLowerCase().includes(fieldId.toLowerCase()));\n    }\n    static getNodesByStatus(status) {\n        const nodes = this.getAllNodes();\n        return nodes.filter((node)=>node.status === status);\n    }\n    static getNodesByAuthor(author) {\n        const nodes = this.getAllNodes();\n        return nodes.filter((node)=>node.author === author);\n    }\n    static searchNodes(query) {\n        const nodes = this.getAllNodes();\n        const searchTerm = query.toLowerCase();\n        return nodes.filter((node)=>node.title.toLowerCase().includes(searchTerm) || node.thought.toLowerCase().includes(searchTerm) || node.tags.some((tag)=>tag.toLowerCase().includes(searchTerm)) || node.author.toLowerCase().includes(searchTerm) || node.origin.description.toLowerCase().includes(searchTerm) || node.artifacts.some((artifact)=>{\n                var _artifact_metadata_title, _artifact_metadata, _artifact_metadata_author, _artifact_metadata1, _artifact_metadata_extractedText, _artifact_metadata2;\n                return ((_artifact_metadata = artifact.metadata) === null || _artifact_metadata === void 0 ? void 0 : (_artifact_metadata_title = _artifact_metadata.title) === null || _artifact_metadata_title === void 0 ? void 0 : _artifact_metadata_title.toLowerCase().includes(searchTerm)) || ((_artifact_metadata1 = artifact.metadata) === null || _artifact_metadata1 === void 0 ? void 0 : (_artifact_metadata_author = _artifact_metadata1.author) === null || _artifact_metadata_author === void 0 ? void 0 : _artifact_metadata_author.toLowerCase().includes(searchTerm)) || ((_artifact_metadata2 = artifact.metadata) === null || _artifact_metadata2 === void 0 ? void 0 : (_artifact_metadata_extractedText = _artifact_metadata2.extractedText) === null || _artifact_metadata_extractedText === void 0 ? void 0 : _artifact_metadata_extractedText.toLowerCase().includes(searchTerm));\n            }));\n    }\n    static updateNode(id, updates) {\n        try {\n            const nodes = this.getAllNodes();\n            const nodeIndex = nodes.findIndex((n)=>n.id === id);\n            if (nodeIndex >= 0) {\n                nodes[nodeIndex] = {\n                    ...nodes[nodeIndex],\n                    ...updates,\n                    updatedAt: new Date().toISOString()\n                };\n                localStorage.setItem(STORAGE_KEYS.NODES, JSON.stringify(nodes));\n            }\n        } catch (error) {\n            console.error(\"Failed to update node:\", error);\n            throw new Error(\"Failed to update node\");\n        }\n    }\n    static deleteNode(id) {\n        try {\n            const nodes = this.getAllNodes();\n            const filteredNodes = nodes.filter((n)=>n.id !== id);\n            localStorage.setItem(STORAGE_KEYS.NODES, JSON.stringify(filteredNodes));\n        } catch (error) {\n            console.error(\"Failed to delete node:\", error);\n            throw new Error(\"Failed to delete node\");\n        }\n    }\n    // Field management\n    static saveField(field) {\n        try {\n            const fields = this.getAllFields();\n            const existingIndex = fields.findIndex((f)=>f.id === field.id);\n            if (existingIndex >= 0) {\n                fields[existingIndex] = field;\n            } else {\n                fields.push(field);\n            }\n            localStorage.setItem(STORAGE_KEYS.FIELDS, JSON.stringify(fields));\n        } catch (error) {\n            console.error(\"Failed to save field:\", error);\n            throw new Error(\"Failed to save field\");\n        }\n    }\n    static getAllFields() {\n        try {\n            const stored = localStorage.getItem(STORAGE_KEYS.FIELDS);\n            return stored ? JSON.parse(stored) : this.getDefaultFields();\n        } catch (error) {\n            console.error(\"Failed to get fields:\", error);\n            return this.getDefaultFields();\n        }\n    }\n    static getField(id) {\n        const fields = this.getAllFields();\n        return fields.find((f)=>f.id === id) || null;\n    }\n    // User management\n    static saveUser(user) {\n        try {\n            const users = this.getAllUsers();\n            const existingIndex = users.findIndex((u)=>u.name === user.name);\n            if (existingIndex >= 0) {\n                users[existingIndex] = user;\n            } else {\n                users.push(user);\n            }\n            localStorage.setItem(STORAGE_KEYS.USERS, JSON.stringify(users));\n        } catch (error) {\n            console.error(\"Failed to save user:\", error);\n            throw new Error(\"Failed to save user\");\n        }\n    }\n    static getAllUsers() {\n        try {\n            const stored = localStorage.getItem(STORAGE_KEYS.USERS);\n            return stored ? JSON.parse(stored) : [];\n        } catch (error) {\n            console.error(\"Failed to get users:\", error);\n            return [];\n        }\n    }\n    static getUser(name) {\n        const users = this.getAllUsers();\n        return users.find((u)=>u.name === name) || null;\n    }\n    // Advanced search with filters\n    static searchNodesAdvanced(options) {\n        let nodes = this.getAllNodes();\n        // Filter by query\n        if (options.query) {\n            nodes = this.searchNodes(options.query);\n        }\n        // Filter by field\n        if (options.field) {\n            nodes = nodes.filter((node)=>node.tags.some((tag)=>tag.toLowerCase().includes(options.field.toLowerCase())));\n        }\n        // Filter by status\n        if (options.status) {\n            nodes = nodes.filter((node)=>node.status === options.status);\n        }\n        // Filter by author\n        if (options.author) {\n            nodes = nodes.filter((node)=>node.author === options.author);\n        }\n        // Filter by tags\n        if (options.tags && options.tags.length > 0) {\n            nodes = nodes.filter((node)=>options.tags.some((tag)=>node.tags.includes(tag)));\n        }\n        // Sort results\n        nodes.sort((a, b)=>{\n            let comparison = 0;\n            switch(options.sortBy){\n                case \"recent\":\n                    comparison = new Date(a.updatedAt).getTime() - new Date(b.updatedAt).getTime();\n                    break;\n                case \"connections\":\n                    comparison = a.connectionCount - b.connectionCount;\n                    break;\n                case \"title\":\n                    comparison = a.title.localeCompare(b.title);\n                    break;\n                case \"status\":\n                    comparison = a.status.localeCompare(b.status);\n                    break;\n            }\n            return options.sortOrder === \"desc\" ? -comparison : comparison;\n        });\n        return nodes;\n    }\n    // Node ID generation system\n    static generateNodeId() {\n        let type = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"RN\";\n        const counters = this.getNodeCounters();\n        const counter = counters.find((c)=>c.type === type) || {\n            type,\n            current_count: -1\n        };\n        const nextCount = counter.current_count + 1;\n        // Update counter atomically\n        this.updateNodeCounter(type, nextCount);\n        // Format as FN-{type}.{count} with decimal point and zero padding\n        return \"FN-\".concat(type, \".\").concat(String(nextCount).padStart(3, \"0\"));\n    }\n    // Reset node counters (for development/testing)\n    static resetNodeCounters() {\n        try {\n            localStorage.removeItem(STORAGE_KEYS.NODE_COUNTERS);\n        } catch (error) {\n            console.error(\"Failed to reset node counters:\", error);\n        }\n    }\n    // Sync counters with actual nodes (in case of mismatch)\n    static syncCountersWithNodes() {\n        try {\n            const nodes = this.getAllNodes();\n            const counters = [];\n            // Count actual nodes by type\n            Object.keys(NODE_TYPE_INFO).forEach((typeKey)=>{\n                const type = typeKey;\n                const actualCount = nodes.filter((n)=>this.getNodeTypeFromId(n.id) === type).length;\n                counters.push({\n                    type,\n                    current_count: actualCount - 1\n                }); // -1 because we start from 0\n            });\n            localStorage.setItem(STORAGE_KEYS.NODE_COUNTERS, JSON.stringify(counters));\n        } catch (error) {\n            console.error(\"Failed to sync counters:\", error);\n        }\n    }\n    // Node counter management\n    static getNodeCounters() {\n        try {\n            const stored = localStorage.getItem(STORAGE_KEYS.NODE_COUNTERS);\n            return stored ? JSON.parse(stored) : [];\n        } catch (error) {\n            console.error(\"Failed to get node counters:\", error);\n            return [];\n        }\n    }\n    static updateNodeCounter(type, count) {\n        try {\n            const counters = this.getNodeCounters();\n            const existingIndex = counters.findIndex((c)=>c.type === type);\n            if (existingIndex >= 0) {\n                counters[existingIndex].current_count = count;\n            } else {\n                counters.push({\n                    type,\n                    current_count: count\n                });\n            }\n            localStorage.setItem(STORAGE_KEYS.NODE_COUNTERS, JSON.stringify(counters));\n        } catch (error) {\n            console.error(\"Failed to update node counter:\", error);\n            throw new Error(\"Failed to update node counter\");\n        }\n    }\n    // Get node type from ID\n    static getNodeTypeFromId(id) {\n        const match = id.match(/^FN-([A-Z]{2})\\.\\d+$/);\n        return match ? match[1] : null;\n    }\n    // Get node statistics by type\n    static getNodeStatsByType() {\n        const nodes = this.getAllNodes();\n        const counters = this.getNodeCounters();\n        const stats = Object.keys(NODE_TYPE_INFO).reduce((acc, type)=>{\n            const nodeType = type;\n            const counter = counters.find((c)=>c.type === nodeType);\n            const actualNodes = nodes.filter((n)=>this.getNodeTypeFromId(n.id) === nodeType);\n            acc[nodeType] = {\n                name: NODE_TYPE_INFO[nodeType].name,\n                description: NODE_TYPE_INFO[nodeType].description,\n                totalCreated: (counter === null || counter === void 0 ? void 0 : counter.current_count) || 0,\n                actualCount: actualNodes.length,\n                latestId: actualNodes.length > 0 ? actualNodes[actualNodes.length - 1].id : null\n            };\n            return acc;\n        }, {});\n        return stats;\n    }\n    // Get statistics\n    static getStats() {\n        const nodes = this.getAllNodes();\n        const fields = this.getAllFields();\n        const users = this.getAllUsers();\n        return {\n            totalNodes: nodes.length,\n            totalFields: fields.length,\n            totalUsers: users.length,\n            nodesByStatus: {\n                draft: nodes.filter((n)=>n.status === \"draft\").length,\n                grounded: nodes.filter((n)=>n.status === \"grounded\").length,\n                reviewed: nodes.filter((n)=>n.status === \"reviewed\").length,\n                canonical: nodes.filter((n)=>n.status === \"canonical\").length,\n                needs_revision: nodes.filter((n)=>n.status === \"needs_revision\").length\n            },\n            averageConnections: nodes.length > 0 ? nodes.reduce((sum, n)=>sum + n.connectionCount, 0) / nodes.length : 0\n        };\n    }\n    // Default fields for initial setup\n    static getDefaultFields() {\n        return [\n            {\n                id: \"system_design\",\n                name: \"System Design\",\n                description: \"Designing systems for care and collaboration\",\n                nodeCount: 14,\n                tags: [\n                    \"systems\",\n                    \"design\",\n                    \"collaboration\"\n                ],\n                color: \"#8B5CF6\"\n            },\n            {\n                id: \"feminist_theory\",\n                name: \"Feminist Theory\",\n                description: \"Feminist perspectives on technology and society\",\n                nodeCount: 22,\n                tags: [\n                    \"feminism\",\n                    \"theory\",\n                    \"technology\"\n                ],\n                color: \"#EC4899\"\n            },\n            {\n                id: \"mutual_aid\",\n                name: \"Mutual Aid\",\n                description: \"Community care and mutual support systems\",\n                nodeCount: 17,\n                tags: [\n                    \"mutual-aid\",\n                    \"community\",\n                    \"care\"\n                ],\n                color: \"#10B981\"\n            },\n            {\n                id: \"archiving\",\n                name: \"Archiving\",\n                description: \"Preserving and organizing knowledge\",\n                nodeCount: 10,\n                tags: [\n                    \"archiving\",\n                    \"preservation\",\n                    \"knowledge\"\n                ],\n                color: \"#F59E0B\"\n            },\n            {\n                id: \"infrastructure\",\n                name: \"Infrastructure\",\n                description: \"Building sustainable technical infrastructure\",\n                nodeCount: 8,\n                tags: [\n                    \"infrastructure\",\n                    \"sustainability\",\n                    \"technology\"\n                ],\n                color: \"#3B82F6\"\n            }\n        ];\n    }\n    // Clear all data (for development/testing)\n    static clearAll() {\n        Object.values(STORAGE_KEYS).forEach((key)=>{\n            localStorage.removeItem(key);\n        });\n    }\n    // Clear all data and reset counters\n    static clearAllAndReset() {\n        this.clearAll();\n        this.resetNodeCounters();\n    }\n    // Export data for backup\n    static exportData() {\n        return {\n            nodes: this.getAllNodes(),\n            fields: this.getAllFields(),\n            users: this.getAllUsers(),\n            exportedAt: new Date().toISOString()\n        };\n    }\n    // Import data from backup\n    static importData(data) {\n        try {\n            if (data.nodes) localStorage.setItem(STORAGE_KEYS.NODES, JSON.stringify(data.nodes));\n            if (data.fields) localStorage.setItem(STORAGE_KEYS.FIELDS, JSON.stringify(data.fields));\n            if (data.users) localStorage.setItem(STORAGE_KEYS.USERS, JSON.stringify(data.users));\n        } catch (error) {\n            console.error(\"Failed to import data:\", error);\n            throw new Error(\"Failed to import data\");\n        }\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/services/storage.ts\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/client-only/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/compiled/client-only/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {



/***/ }),

/***/ "./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxPQUFPLGdCQUFnQixtQkFBbUIsTUFBTSxNQUFNLDRCQUE0QixtREFBbUQsK0JBQStCLHFEQUFxRCxZQUFZLElBQUksbUNBQW1DLGFBQWEsS0FBSyxvQkFBb0IsU0FBUyxtQkFBbUIsSUFBSSxxQ0FBcUMsZUFBZSxLQUFLLHVCQUF1QixTQUFTLHVCQUF1QixJQUFJLHVCQUF1QixtQkFBbUIsdUJBQXVCLDJDQUEyQyxhQUFhLHVCQUF1QixJQUFJLGNBQWMsU0FBUyxJQUFJLHdCQUF3QixTQUFTLDBCQUEwQiw0QkFBNEIscUJBQXFCLHVCQUF1QixnREFBZ0QsZUFBZSx1QkFBdUIsSUFBSSxZQUFZLFNBQVMsSUFBSSxzQkFBc0IsU0FBUyx3QkFBd0IsU0FBUyxZQUFZLE1BQU0sU0FBUywyQkFBMkIsV0FBVyxPQUFPLFFBQVEsYUFBYSxjQUFjLEtBQUssS0FBSyxhQUFhLGNBQWMsc0JBQXNCLE1BQU0sT0FBTyxrQ0FBa0MsT0FBTyxlQUFlLFNBQVMsSUFBSSxLQUFLLGFBQWEsTUFBTSxZQUFZLEtBQUssV0FBVyxPQUFPLFFBQVEsbUJBQW1CLHVCQUF1QixvQ0FBb0MsdUJBQXVCLFlBQVksbUJBQW1CLEtBQUsscUJBQXFCLHNCQUFzQixxQkFBcUIseUJBQXlCLG1CQUFtQixXQUFXLGFBQWEsOEJBQThCLGlDQUFpQyxrQkFBa0IsZUFBZSxTQUFTLFVBQVUsYUFBYSxjQUFjLGlCQUFpQixVQUFVLG1CQUFtQixZQUFZLFdBQVcsc0JBQXNCLDBCQUEwQixZQUFZLHVCQUF1QiwyQkFBMkIsd0JBQXdCLFVBQVUsc0JBQXNCLHFEQUFxRCxpQkFBaUIsV0FBVyxvQkFBb0IsbURBQW1ELG1CQUFtQixZQUFZLFNBQVMsZ0NBQWdDLFdBQVcsa0JBQWtCLGlCQUFpQixZQUFZLFlBQVksV0FBVyxJQUFJLHNDQUFzQyxRQUFRLFFBQVEsaUJBQWlCLGlCQUFpQixtRUFBbUUsU0FBUyxLQUFLLCtCQUErQixpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9wcm9jZXNzL2Jyb3dzZXIuanM/MWIxZCJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgZT17MjI5OmZ1bmN0aW9uKGUpe3ZhciB0PWUuZXhwb3J0cz17fTt2YXIgcjt2YXIgbjtmdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwic2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfShmdW5jdGlvbigpe3RyeXtpZih0eXBlb2Ygc2V0VGltZW91dD09PVwiZnVuY3Rpb25cIil7cj1zZXRUaW1lb3V0fWVsc2V7cj1kZWZhdWx0U2V0VGltb3V0fX1jYXRjaChlKXtyPWRlZmF1bHRTZXRUaW1vdXR9dHJ5e2lmKHR5cGVvZiBjbGVhclRpbWVvdXQ9PT1cImZ1bmN0aW9uXCIpe249Y2xlYXJUaW1lb3V0fWVsc2V7bj1kZWZhdWx0Q2xlYXJUaW1lb3V0fX1jYXRjaChlKXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fSkoKTtmdW5jdGlvbiBydW5UaW1lb3V0KGUpe2lmKHI9PT1zZXRUaW1lb3V0KXtyZXR1cm4gc2V0VGltZW91dChlLDApfWlmKChyPT09ZGVmYXVsdFNldFRpbW91dHx8IXIpJiZzZXRUaW1lb3V0KXtyPXNldFRpbWVvdXQ7cmV0dXJuIHNldFRpbWVvdXQoZSwwKX10cnl7cmV0dXJuIHIoZSwwKX1jYXRjaCh0KXt0cnl7cmV0dXJuIHIuY2FsbChudWxsLGUsMCl9Y2F0Y2godCl7cmV0dXJuIHIuY2FsbCh0aGlzLGUsMCl9fX1mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQoZSl7aWYobj09PWNsZWFyVGltZW91dCl7cmV0dXJuIGNsZWFyVGltZW91dChlKX1pZigobj09PWRlZmF1bHRDbGVhclRpbWVvdXR8fCFuKSYmY2xlYXJUaW1lb3V0KXtuPWNsZWFyVGltZW91dDtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfXRyeXtyZXR1cm4gbihlKX1jYXRjaCh0KXt0cnl7cmV0dXJuIG4uY2FsbChudWxsLGUpfWNhdGNoKHQpe3JldHVybiBuLmNhbGwodGhpcyxlKX19fXZhciBpPVtdO3ZhciBvPWZhbHNlO3ZhciB1O3ZhciBhPS0xO2Z1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpe2lmKCFvfHwhdSl7cmV0dXJufW89ZmFsc2U7aWYodS5sZW5ndGgpe2k9dS5jb25jYXQoaSl9ZWxzZXthPS0xfWlmKGkubGVuZ3RoKXtkcmFpblF1ZXVlKCl9fWZ1bmN0aW9uIGRyYWluUXVldWUoKXtpZihvKXtyZXR1cm59dmFyIGU9cnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO289dHJ1ZTt2YXIgdD1pLmxlbmd0aDt3aGlsZSh0KXt1PWk7aT1bXTt3aGlsZSgrK2E8dCl7aWYodSl7dVthXS5ydW4oKX19YT0tMTt0PWkubGVuZ3RofXU9bnVsbDtvPWZhbHNlO3J1bkNsZWFyVGltZW91dChlKX10Lm5leHRUaWNrPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSl7Zm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl7dFtyLTFdPWFyZ3VtZW50c1tyXX19aS5wdXNoKG5ldyBJdGVtKGUsdCkpO2lmKGkubGVuZ3RoPT09MSYmIW8pe3J1blRpbWVvdXQoZHJhaW5RdWV1ZSl9fTtmdW5jdGlvbiBJdGVtKGUsdCl7dGhpcy5mdW49ZTt0aGlzLmFycmF5PXR9SXRlbS5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKCl7dGhpcy5mdW4uYXBwbHkobnVsbCx0aGlzLmFycmF5KX07dC50aXRsZT1cImJyb3dzZXJcIjt0LmJyb3dzZXI9dHJ1ZTt0LmVudj17fTt0LmFyZ3Y9W107dC52ZXJzaW9uPVwiXCI7dC52ZXJzaW9ucz17fTtmdW5jdGlvbiBub29wKCl7fXQub249bm9vcDt0LmFkZExpc3RlbmVyPW5vb3A7dC5vbmNlPW5vb3A7dC5vZmY9bm9vcDt0LnJlbW92ZUxpc3RlbmVyPW5vb3A7dC5yZW1vdmVBbGxMaXN0ZW5lcnM9bm9vcDt0LmVtaXQ9bm9vcDt0LnByZXBlbmRMaXN0ZW5lcj1ub29wO3QucHJlcGVuZE9uY2VMaXN0ZW5lcj1ub29wO3QubGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3JldHVybltdfTt0LmJpbmRpbmc9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QuY3dkPWZ1bmN0aW9uKCl7cmV0dXJuXCIvXCJ9O3QuY2hkaXI9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkXCIpfTt0LnVtYXNrPWZ1bmN0aW9uKCl7cmV0dXJuIDB9fX07dmFyIHQ9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhyKXt2YXIgbj10W3JdO2lmKG4hPT11bmRlZmluZWQpe3JldHVybiBuLmV4cG9ydHN9dmFyIGk9dFtyXT17ZXhwb3J0czp7fX07dmFyIG89dHJ1ZTt0cnl7ZVtyXShpLGkuZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTtvPWZhbHNlfWZpbmFsbHl7aWYobylkZWxldGUgdFtyXX1yZXR1cm4gaS5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgcj1fX25jY3dwY2tfcmVxdWlyZV9fKDIyOSk7bW9kdWxlLmV4cG9ydHM9cn0pKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "./node_modules/next/router.js":
/*!*************************************!*\
  !*** ./node_modules/next/router.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/client/router */ \"./node_modules/next/dist/client/router.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9yb3V0ZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsNkdBQWdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L3JvdXRlci5qcz8xYmI2Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L2NsaWVudC9yb3V0ZXInKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/router.js\n"));

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    {\n      if (hasOwnProperty.call(props, 'key')) {\n        var componentName = getComponentNameFromType(type);\n        var keys = Object.keys(props).filter(function (k) {\n          return k !== 'key';\n        });\n        var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n        if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n          var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n          error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n          didWarnAboutKeySpread[componentName + beforeExample] = true;\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz81Nzc3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["pages/_app","main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fcandacestewart%2Ffieldnodes-react%2Fpages%2Findex.tsx&page=%2F!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);