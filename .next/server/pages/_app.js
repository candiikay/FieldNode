/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "./pages/_app.tsx":
/*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _contexts_ThemeContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/contexts/ThemeContext */ \"./src/contexts/ThemeContext.tsx\");\n/* harmony import */ var _providers_AuthProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/providers/AuthProvider */ \"./src/providers/AuthProvider.tsx\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/head */ \"next/head\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\nfunction App({ Component, pageProps }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_3___default()), {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                    name: \"viewport\",\n                    content: \"width=device-width, initial-scale=1.0\"\n                }, void 0, false, {\n                    fileName: \"/Users/candacestewart/fieldnodes-react/pages/_app.tsx\",\n                    lineNumber: 11,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/candacestewart/fieldnodes-react/pages/_app.tsx\",\n                lineNumber: 10,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_contexts_ThemeContext__WEBPACK_IMPORTED_MODULE_1__.ThemeProvider, {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_providers_AuthProvider__WEBPACK_IMPORTED_MODULE_2__.AuthProvider, {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                        ...pageProps\n                    }, void 0, false, {\n                        fileName: \"/Users/candacestewart/fieldnodes-react/pages/_app.tsx\",\n                        lineNumber: 15,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/candacestewart/fieldnodes-react/pages/_app.tsx\",\n                    lineNumber: 14,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/candacestewart/fieldnodes-react/pages/_app.tsx\",\n                lineNumber: 13,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQ3dEO0FBQ0E7QUFDM0I7QUFDRTtBQUVoQixTQUFTRyxJQUFJLEVBQUVDLFNBQVMsRUFBRUMsU0FBUyxFQUFZO0lBQzVELHFCQUNFOzswQkFDRSw4REFBQ0gsa0RBQUlBOzBCQUNILDRFQUFDSTtvQkFBS0MsTUFBSztvQkFBV0MsU0FBUTs7Ozs7Ozs7Ozs7MEJBRWhDLDhEQUFDUixpRUFBYUE7MEJBQ1osNEVBQUNDLGlFQUFZQTs4QkFDWCw0RUFBQ0c7d0JBQVcsR0FBR0MsU0FBUzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBS2xDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmllbGRub2Rlcy1yZWFjdC8uL3BhZ2VzL19hcHAudHN4PzJmYmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBBcHBQcm9wcyB9IGZyb20gJ25leHQvYXBwJztcbmltcG9ydCB7IFRoZW1lUHJvdmlkZXIgfSBmcm9tICdAL2NvbnRleHRzL1RoZW1lQ29udGV4dCc7XG5pbXBvcnQgeyBBdXRoUHJvdmlkZXIgfSBmcm9tICdAL3Byb3ZpZGVycy9BdXRoUHJvdmlkZXInO1xuaW1wb3J0IEhlYWQgZnJvbSAnbmV4dC9oZWFkJztcbmltcG9ydCAnLi4vc3R5bGVzL2dsb2JhbHMuY3NzJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQXBwKHsgQ29tcG9uZW50LCBwYWdlUHJvcHMgfTogQXBwUHJvcHMpIHtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPEhlYWQ+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJ2aWV3cG9ydFwiIGNvbnRlbnQ9XCJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wXCIgLz5cbiAgICAgIDwvSGVhZD5cbiAgICAgIDxUaGVtZVByb3ZpZGVyPlxuICAgICAgICA8QXV0aFByb3ZpZGVyPlxuICAgICAgICAgIDxDb21wb25lbnQgey4uLnBhZ2VQcm9wc30gLz5cbiAgICAgICAgPC9BdXRoUHJvdmlkZXI+XG4gICAgICA8L1RoZW1lUHJvdmlkZXI+XG4gICAgPC8+XG4gICk7XG59XG4iXSwibmFtZXMiOlsiVGhlbWVQcm92aWRlciIsIkF1dGhQcm92aWRlciIsIkhlYWQiLCJBcHAiLCJDb21wb25lbnQiLCJwYWdlUHJvcHMiLCJtZXRhIiwibmFtZSIsImNvbnRlbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/_app.tsx\n");

/***/ }),

/***/ "./src/contexts/ThemeContext.tsx":
/*!***************************************!*\
  !*** ./src/contexts/ThemeContext.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThemeProvider: () => (/* binding */ ThemeProvider),\n/* harmony export */   themes: () => (/* binding */ themes),\n/* harmony export */   useTheme: () => (/* binding */ useTheme)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ themes,ThemeProvider,useTheme auto */ \n\nconst ThemeContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst themes = {\n    monochrome: {\n        name: \"Attuned\",\n        description: \"Clean interface with warm brown accents\",\n        colors: {\n            bg: {\n                canvas: \"#fafafa\",\n                elevated: \"#ffffff\",\n                hover: \"#f0f0f0\",\n                terminal: \"#ffffff\"\n            },\n            text: {\n                primary: \"#2d2d2d\",\n                secondary: \"#999999\",\n                accent: \"#9f8f7f\",\n                muted: \"#b3b3b3\"\n            },\n            field: {\n                lilac: \"#9f8f7f\",\n                magenta: \"#9f8f7f\",\n                coral: \"#9f8f7f\",\n                orchid: \"#9f8f7f\"\n            },\n            semantic: {\n                success: \"#4caf50\",\n                warning: \"#ff9800\",\n                error: \"#dc2626\",\n                info: \"#2196f3\"\n            },\n            divider: \"#e5e5e5\"\n        },\n        typography: {\n            family: {\n                sans: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\n                mono: \"'JetBrains Mono', 'IBM Plex Mono', ui-monospace, SFMono-Regular, Menlo, Consolas, monospace\"\n            }\n        }\n    },\n    research: {\n        name: \"Amplified\",\n        description: \"Dark interface with warm brown accents\",\n        colors: {\n            bg: {\n                canvas: \"#1a1a1a\",\n                elevated: \"#0f0f0f\",\n                hover: \"#2a2a2a\",\n                terminal: \"#0f0f0f\"\n            },\n            text: {\n                primary: \"#cccccc\",\n                secondary: \"#808080\",\n                accent: \"#9f8f7f\",\n                muted: \"#666666\"\n            },\n            field: {\n                lilac: \"#9f8f7f\",\n                magenta: \"#9f8f7f\",\n                coral: \"#9f8f7f\",\n                orchid: \"#9f8f7f\"\n            },\n            semantic: {\n                success: \"#4caf50\",\n                warning: \"#ff9800\",\n                error: \"#f44336\",\n                info: \"#2196f3\"\n            },\n            divider: \"#333333\"\n        },\n        typography: {\n            family: {\n                sans: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\n                mono: \"'JetBrains Mono', 'IBM Plex Mono', ui-monospace, SFMono-Regular, Menlo, Consolas, monospace\"\n            }\n        }\n    }\n};\nfunction ThemeProvider({ children }) {\n    const [theme, setThemeState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"monochrome\");\n    // Load theme from localStorage on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const savedTheme = localStorage.getItem(\"fieldnodes-theme\");\n        if (savedTheme && (savedTheme === \"monochrome\" || savedTheme === \"research\")) {\n            setThemeState(savedTheme);\n        }\n    }, []);\n    // Save theme to localStorage when it changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        localStorage.setItem(\"fieldnodes-theme\", theme);\n    }, [\n        theme\n    ]);\n    // Update CSS variables when theme changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const root = document.documentElement;\n        const currentTheme = themes[theme];\n        // Update CSS variables\n        root.style.setProperty(\"--bg-canvas\", currentTheme.colors.bg.canvas);\n        root.style.setProperty(\"--bg-elevated\", currentTheme.colors.bg.elevated);\n        root.style.setProperty(\"--bg-hover\", currentTheme.colors.bg.hover);\n        root.style.setProperty(\"--bg-terminal\", currentTheme.colors.bg.terminal);\n        root.style.setProperty(\"--text-primary\", currentTheme.colors.text.primary);\n        root.style.setProperty(\"--text-secondary\", currentTheme.colors.text.secondary);\n        root.style.setProperty(\"--text-accent\", currentTheme.colors.text.accent);\n        root.style.setProperty(\"--text-muted\", currentTheme.colors.text.muted);\n        root.style.setProperty(\"--field-lilac\", currentTheme.colors.field.lilac);\n        root.style.setProperty(\"--field-magenta\", currentTheme.colors.field.magenta);\n        root.style.setProperty(\"--field-coral\", currentTheme.colors.field.coral);\n        root.style.setProperty(\"--field-orchid\", currentTheme.colors.field.orchid);\n        root.style.setProperty(\"--semantic-success\", currentTheme.colors.semantic.success);\n        root.style.setProperty(\"--semantic-warning\", currentTheme.colors.semantic.warning);\n        root.style.setProperty(\"--semantic-error\", currentTheme.colors.semantic.error);\n        root.style.setProperty(\"--semantic-info\", currentTheme.colors.semantic.info);\n        root.style.setProperty(\"--divider\", currentTheme.colors.divider);\n        root.style.setProperty(\"--font-sans\", currentTheme.typography.family.sans);\n        root.style.setProperty(\"--font-mono\", currentTheme.typography.family.mono);\n        // Set theme attribute for CSS selectors\n        root.setAttribute(\"data-theme\", theme);\n    }, [\n        theme\n    ]);\n    const toggleTheme = ()=>{\n        setThemeState((prev)=>prev === \"monochrome\" ? \"research\" : \"monochrome\");\n    };\n    const setTheme = (newTheme)=>{\n        setThemeState(newTheme);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ThemeContext.Provider, {\n        value: {\n            theme,\n            toggleTheme,\n            setTheme\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/candacestewart/fieldnodes-react/src/contexts/ThemeContext.tsx\",\n        lineNumber: 151,\n        columnNumber: 5\n    }, this);\n}\nconst useTheme = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ThemeContext);\n    if (context === undefined) {\n        throw new Error(\"useTheme must be used within a ThemeProvider\");\n    }\n    return context;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/contexts/ThemeContext.tsx\n");

/***/ }),

/***/ "./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSupabaseAdmin: () => (/* binding */ getSupabaseAdmin),\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__);\n\nconst supabaseUrl = \"https://nuoafakxusnkpnqagthv.supabase.co\";\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im51b2FmYWt4dXNua3BucWFndGh2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjE2ODEyNzgsImV4cCI6MjA3NzI1NzI3OH0.l4BqZTnGPipYI0qnGsa7svA3pLR46rIX3wGVWNX8MJA\";\nif (!supabaseUrl || !supabaseAnonKey) {\n    throw new Error(\"Missing Supabase environment variables. Please check your .env.local file.\");\n}\n// Client-side Supabase client\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n// Server-side client (for API routes) - only available server-side\nconst getSupabaseAdmin = ()=>{\n    const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n    if (!serviceRoleKey) {\n        throw new Error(\"Missing SUPABASE_SERVICE_ROLE_KEY environment variable.\");\n    }\n    return (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, serviceRoleKey, {\n        auth: {\n            autoRefreshToken: false,\n            persistSession: false\n        }\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/lib/supabase.ts\n");

/***/ }),

/***/ "./src/providers/AuthProvider.tsx":
/*!****************************************!*\
  !*** ./src/providers/AuthProvider.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/supabase */ \"./src/lib/supabase.ts\");\n/* harmony import */ var _services_supabase_storage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/services/supabase-storage */ \"./src/services/supabase-storage.ts\");\n/* __next_internal_client_entry_do_not_use__ AuthProvider,useAuth auto */ \n\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    user: null,\n    session: null,\n    loading: true,\n    signOut: async ()=>{},\n    signInWithEmail: async ()=>{},\n    signUpWithEmail: async ()=>{},\n    signInWithMagicLink: async ()=>{},\n    signInWithGoogle: async ()=>{},\n    updateEmail: async ()=>{},\n    updatePassword: async ()=>{},\n    resetPassword: async ()=>{},\n    userProfile: null\n});\nfunction AuthProvider({ children }) {\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [session, setSession] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [userProfile, setUserProfile] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const loadUserProfile = async (userId)=>{\n        try {\n            const profile = await _services_supabase_storage__WEBPACK_IMPORTED_MODULE_3__.SupabaseStorage.getUserProfile(userId);\n            setUserProfile(profile);\n            return profile;\n        } catch (error) {\n            // If profile doesn't exist, return null\n            setUserProfile(null);\n            return null;\n        }\n    };\n    const createProfileFromOAuth = async (user)=>{\n        try {\n            // Check if profile already exists\n            const existingProfile = await _services_supabase_storage__WEBPACK_IMPORTED_MODULE_3__.SupabaseStorage.getUserProfile(user.id);\n            if (existingProfile) {\n                setUserProfile(existingProfile);\n                return;\n            }\n            // Extract name from Google OAuth metadata\n            const fullName = user.user_metadata?.full_name || user.user_metadata?.name || user.user_metadata?.display_name || user.email?.split(\"@\")[0] || \"user\";\n            // Generate username from name (sanitize for username format)\n            let username = fullName.toLowerCase().replace(/[^a-z0-9_]/g, \"_\").replace(/_+/g, \"_\").replace(/^_|_$/g, \"\");\n            // Ensure username meets requirements (3-30 chars, alphanumeric + underscore)\n            if (username.length < 3) {\n                username = username.padEnd(3, \"_\");\n            }\n            if (username.length > 30) {\n                username = username.substring(0, 30);\n            }\n            // If username is still invalid, use email prefix\n            if (!/^[a-zA-Z0-9_]+$/.test(username) || username.length < 3) {\n                username = (user.email?.split(\"@\")[0] || \"user\").toLowerCase().replace(/[^a-z0-9_]/g, \"_\").substring(0, 30);\n            }\n            // Add random suffix if username already exists (we'll handle conflicts)\n            let finalUsername = username;\n            let attempts = 0;\n            while(attempts < 10){\n                try {\n                    await _services_supabase_storage__WEBPACK_IMPORTED_MODULE_3__.SupabaseStorage.createUserProfile(user.id, finalUsername, fullName);\n                    const newProfile = await _services_supabase_storage__WEBPACK_IMPORTED_MODULE_3__.SupabaseStorage.getUserProfile(user.id);\n                    setUserProfile(newProfile);\n                    return;\n                } catch (error) {\n                    // If username conflict, append number\n                    if (error.code === \"23505\" && attempts < 10) {\n                        finalUsername = `${username}${Math.floor(Math.random() * 1000)}`;\n                        attempts++;\n                    } else {\n                        throw error;\n                    }\n                }\n            }\n        } catch (error) {\n            console.error(\"Failed to create profile from OAuth:\", error);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Get initial session\n        _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.getSession().then(async ({ data: { session } })=>{\n            setSession(session);\n            setUser(session?.user ?? null);\n            if (session?.user) {\n                try {\n                    const profile = await loadUserProfile(session.user.id);\n                    // If no profile exists and user has OAuth metadata, create profile\n                    if (!profile) {\n                        const isOAuth = session.user.app_metadata?.provider !== \"email\";\n                        if (isOAuth) {\n                            await createProfileFromOAuth(session.user);\n                        }\n                    }\n                } catch (error) {\n                    console.error(\"Error loading initial session:\", error);\n                }\n            }\n            setLoading(false);\n        });\n        // Listen for auth changes\n        const { data: { subscription } } = _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.onAuthStateChange(async (event, session)=>{\n            setSession(session);\n            setUser(session?.user ?? null);\n            if (session?.user) {\n                try {\n                    // Try to load existing profile\n                    const profile = await loadUserProfile(session.user.id);\n                    // If no profile exists and it's a new OAuth sign-in, create one\n                    if (!profile && (event === \"SIGNED_IN\" || event === \"USER_UPDATED\")) {\n                        // Check if this is an OAuth provider (has user_metadata with provider)\n                        const isOAuth = session.user.app_metadata?.provider !== \"email\";\n                        if (isOAuth) {\n                            await createProfileFromOAuth(session.user);\n                        }\n                    }\n                } catch (error) {\n                    console.error(\"Error handling auth state change:\", error);\n                }\n            } else {\n                setUserProfile(null);\n            }\n            setLoading(false);\n        });\n        return ()=>subscription.unsubscribe();\n    }, []);\n    const signInWithEmail = async (email, password)=>{\n        const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.signInWithPassword({\n            email,\n            password\n        });\n        if (error) {\n            throw new Error(error.message);\n        }\n    };\n    const signUpWithEmail = async (email, password, username)=>{\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.signUp({\n            email,\n            password,\n            options: {\n                data: {\n                    username\n                }\n            }\n        });\n        if (error) {\n            throw new Error(error.message);\n        }\n        // Create user profile\n        if (data.user) {\n            await _services_supabase_storage__WEBPACK_IMPORTED_MODULE_3__.SupabaseStorage.createUserProfile(data.user.id, username);\n        }\n    };\n    const signInWithMagicLink = async (email)=>{\n        const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.signInWithOtp({\n            email,\n            options: {\n                emailRedirectTo: `${window.location.origin}/auth/callback`\n            }\n        });\n        if (error) {\n            throw new Error(error.message);\n        }\n    };\n    const signInWithGoogle = async ()=>{\n        const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.signInWithOAuth({\n            provider: \"google\",\n            options: {\n                redirectTo: `${window.location.origin}/auth/callback`\n            }\n        });\n        if (error) {\n            throw new Error(error.message);\n        }\n    };\n    const updateEmail = async (newEmail)=>{\n        const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.updateUser({\n            email: newEmail\n        });\n        if (error) {\n            throw new Error(error.message);\n        }\n    };\n    const updatePassword = async (newPassword)=>{\n        const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.updateUser({\n            password: newPassword\n        });\n        if (error) {\n            throw new Error(error.message);\n        }\n    };\n    const resetPassword = async (email)=>{\n        const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.resetPasswordForEmail(email, {\n            redirectTo: `${window.location.origin}/auth/reset-password`\n        });\n        if (error) {\n            throw new Error(error.message);\n        }\n    };\n    const signOut = async ()=>{\n        await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.signOut();\n        setUserProfile(null);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: {\n            user,\n            session,\n            loading,\n            signOut,\n            signInWithEmail,\n            signUpWithEmail,\n            signInWithMagicLink,\n            signInWithGoogle,\n            updateEmail,\n            updatePassword,\n            resetPassword,\n            userProfile\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/candacestewart/fieldnodes-react/src/providers/AuthProvider.tsx\",\n        lineNumber: 270,\n        columnNumber: 5\n    }, this);\n}\nconst useAuth = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error(\"useAuth must be used within an AuthProvider\");\n    }\n    return context;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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TztZQUNULE1BQU0sSUFBSXdDLE1BQU14QyxNQUFNeUMsT0FBTztRQUMvQjtJQUNGO0lBRUEsTUFBTXJELGdCQUFnQixPQUFPcUI7UUFDM0IsTUFBTSxFQUFFVCxLQUFLLEVBQUUsR0FBRyxNQUFNekIsbURBQVFBLENBQUNvRCxJQUFJLENBQUMyQixxQkFBcUIsQ0FBQzdDLE9BQU87WUFDakV5QyxZQUFZLENBQUMsRUFBRUosT0FBT0MsUUFBUSxDQUFDQyxNQUFNLENBQUMsb0JBQW9CLENBQUM7UUFDN0Q7UUFFQSxJQUFJaEQsT0FBTztZQUNULE1BQU0sSUFBSXdDLE1BQU14QyxNQUFNeUMsT0FBTztRQUMvQjtJQUNGO0lBRUEsTUFBTTVELFVBQVU7UUFDZCxNQUFNTixtREFBUUEsQ0FBQ29ELElBQUksQ0FBQzlDLE9BQU87UUFDM0JjLGVBQWU7SUFDakI7SUFFQSxxQkFDRSw4REFBQ2xCLFlBQVk4RSxRQUFRO1FBQ25CQyxPQUFPO1lBQ0w5RTtZQUNBQztZQUNBQztZQUNBQztZQUNBQztZQUNBQztZQUNBQztZQUNBQztZQUNBQztZQUNBQztZQUNBQztZQUNBQztRQUNGO2tCQUVDRTs7Ozs7O0FBR1A7QUFFTyxNQUFNa0UsVUFBVTtJQUNyQixNQUFNQyxVQUFVdEYsaURBQVVBLENBQUNLO0lBQzNCLElBQUlpRixZQUFZQyxXQUFXO1FBQ3pCLE1BQU0sSUFBSW5CLE1BQU07SUFDbEI7SUFDQSxPQUFPa0I7QUFDVCxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmllbGRub2Rlcy1yZWFjdC8uL3NyYy9wcm92aWRlcnMvQXV0aFByb3ZpZGVyLnRzeD8xMWMyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcbmltcG9ydCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBVc2VyLCBTZXNzaW9uIH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJztcbmltcG9ydCB7IHN1cGFiYXNlIH0gZnJvbSAnQC9saWIvc3VwYWJhc2UnO1xuaW1wb3J0IHsgU3VwYWJhc2VTdG9yYWdlIH0gZnJvbSAnQC9zZXJ2aWNlcy9zdXBhYmFzZS1zdG9yYWdlJztcblxuaW50ZXJmYWNlIEF1dGhDb250ZXh0VHlwZSB7XG4gIHVzZXI6IFVzZXIgfCBudWxsO1xuICBzZXNzaW9uOiBTZXNzaW9uIHwgbnVsbDtcbiAgbG9hZGluZzogYm9vbGVhbjtcbiAgc2lnbk91dDogKCkgPT4gUHJvbWlzZTx2b2lkPjtcbiAgc2lnbkluV2l0aEVtYWlsOiAoZW1haWw6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZykgPT4gUHJvbWlzZTx2b2lkPjtcbiAgc2lnblVwV2l0aEVtYWlsOiAoZW1haWw6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZywgdXNlcm5hbWU6IHN0cmluZykgPT4gUHJvbWlzZTx2b2lkPjtcbiAgc2lnbkluV2l0aE1hZ2ljTGluazogKGVtYWlsOiBzdHJpbmcpID0+IFByb21pc2U8dm9pZD47XG4gIHNpZ25JbldpdGhHb29nbGU6ICgpID0+IFByb21pc2U8dm9pZD47XG4gIHVwZGF0ZUVtYWlsOiAobmV3RW1haWw6IHN0cmluZykgPT4gUHJvbWlzZTx2b2lkPjtcbiAgdXBkYXRlUGFzc3dvcmQ6IChuZXdQYXNzd29yZDogc3RyaW5nKSA9PiBQcm9taXNlPHZvaWQ+O1xuICByZXNldFBhc3N3b3JkOiAoZW1haWw6IHN0cmluZykgPT4gUHJvbWlzZTx2b2lkPjtcbiAgdXNlclByb2ZpbGU6IGFueSB8IG51bGw7XG59XG5cbmNvbnN0IEF1dGhDb250ZXh0ID0gY3JlYXRlQ29udGV4dDxBdXRoQ29udGV4dFR5cGU+KHtcbiAgdXNlcjogbnVsbCxcbiAgc2Vzc2lvbjogbnVsbCxcbiAgbG9hZGluZzogdHJ1ZSxcbiAgc2lnbk91dDogYXN5bmMgKCkgPT4ge30sXG4gIHNpZ25JbldpdGhFbWFpbDogYXN5bmMgKCkgPT4ge30sXG4gIHNpZ25VcFdpdGhFbWFpbDogYXN5bmMgKCkgPT4ge30sXG4gIHNpZ25JbldpdGhNYWdpY0xpbms6IGFzeW5jICgpID0+IHt9LFxuICBzaWduSW5XaXRoR29vZ2xlOiBhc3luYyAoKSA9PiB7fSxcbiAgdXBkYXRlRW1haWw6IGFzeW5jICgpID0+IHt9LFxuICB1cGRhdGVQYXNzd29yZDogYXN5bmMgKCkgPT4ge30sXG4gIHJlc2V0UGFzc3dvcmQ6IGFzeW5jICgpID0+IHt9LFxuICB1c2VyUHJvZmlsZTogbnVsbCxcbn0pO1xuXG5leHBvcnQgZnVuY3Rpb24gQXV0aFByb3ZpZGVyKHsgY2hpbGRyZW4gfTogeyBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlIH0pIHtcbiAgY29uc3QgW3VzZXIsIHNldFVzZXJdID0gdXNlU3RhdGU8VXNlciB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbc2Vzc2lvbiwgc2V0U2Vzc2lvbl0gPSB1c2VTdGF0ZTxTZXNzaW9uIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpO1xuICBjb25zdCBbdXNlclByb2ZpbGUsIHNldFVzZXJQcm9maWxlXSA9IHVzZVN0YXRlPGFueSB8IG51bGw+KG51bGwpO1xuXG4gIGNvbnN0IGxvYWRVc2VyUHJvZmlsZSA9IGFzeW5jICh1c2VySWQ6IHN0cmluZykgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBwcm9maWxlID0gYXdhaXQgU3VwYWJhc2VTdG9yYWdlLmdldFVzZXJQcm9maWxlKHVzZXJJZCk7XG4gICAgICBzZXRVc2VyUHJvZmlsZShwcm9maWxlKTtcbiAgICAgIHJldHVybiBwcm9maWxlO1xuICAgIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICAgIC8vIElmIHByb2ZpbGUgZG9lc24ndCBleGlzdCwgcmV0dXJuIG51bGxcbiAgICAgIHNldFVzZXJQcm9maWxlKG51bGwpO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGNyZWF0ZVByb2ZpbGVGcm9tT0F1dGggPSBhc3luYyAodXNlcjogVXNlcikgPT4ge1xuICAgIHRyeSB7XG4gICAgICAvLyBDaGVjayBpZiBwcm9maWxlIGFscmVhZHkgZXhpc3RzXG4gICAgICBjb25zdCBleGlzdGluZ1Byb2ZpbGUgPSBhd2FpdCBTdXBhYmFzZVN0b3JhZ2UuZ2V0VXNlclByb2ZpbGUodXNlci5pZCk7XG4gICAgICBpZiAoZXhpc3RpbmdQcm9maWxlKSB7XG4gICAgICAgIHNldFVzZXJQcm9maWxlKGV4aXN0aW5nUHJvZmlsZSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gRXh0cmFjdCBuYW1lIGZyb20gR29vZ2xlIE9BdXRoIG1ldGFkYXRhXG4gICAgICBjb25zdCBmdWxsTmFtZSA9IHVzZXIudXNlcl9tZXRhZGF0YT8uZnVsbF9uYW1lIHx8IFxuICAgICAgICAgICAgICAgICAgICAgIHVzZXIudXNlcl9tZXRhZGF0YT8ubmFtZSB8fCBcbiAgICAgICAgICAgICAgICAgICAgICB1c2VyLnVzZXJfbWV0YWRhdGE/LmRpc3BsYXlfbmFtZSB8fFxuICAgICAgICAgICAgICAgICAgICAgIHVzZXIuZW1haWw/LnNwbGl0KCdAJylbMF0gfHwgXG4gICAgICAgICAgICAgICAgICAgICAgJ3VzZXInO1xuXG4gICAgICAvLyBHZW5lcmF0ZSB1c2VybmFtZSBmcm9tIG5hbWUgKHNhbml0aXplIGZvciB1c2VybmFtZSBmb3JtYXQpXG4gICAgICBsZXQgdXNlcm5hbWUgPSBmdWxsTmFtZVxuICAgICAgICAudG9Mb3dlckNhc2UoKVxuICAgICAgICAucmVwbGFjZSgvW15hLXowLTlfXS9nLCAnXycpXG4gICAgICAgIC5yZXBsYWNlKC9fKy9nLCAnXycpXG4gICAgICAgIC5yZXBsYWNlKC9eX3xfJC9nLCAnJyk7XG5cbiAgICAgIC8vIEVuc3VyZSB1c2VybmFtZSBtZWV0cyByZXF1aXJlbWVudHMgKDMtMzAgY2hhcnMsIGFscGhhbnVtZXJpYyArIHVuZGVyc2NvcmUpXG4gICAgICBpZiAodXNlcm5hbWUubGVuZ3RoIDwgMykge1xuICAgICAgICB1c2VybmFtZSA9IHVzZXJuYW1lLnBhZEVuZCgzLCAnXycpO1xuICAgICAgfVxuICAgICAgaWYgKHVzZXJuYW1lLmxlbmd0aCA+IDMwKSB7XG4gICAgICAgIHVzZXJuYW1lID0gdXNlcm5hbWUuc3Vic3RyaW5nKDAsIDMwKTtcbiAgICAgIH1cblxuICAgICAgLy8gSWYgdXNlcm5hbWUgaXMgc3RpbGwgaW52YWxpZCwgdXNlIGVtYWlsIHByZWZpeFxuICAgICAgaWYgKCEvXlthLXpBLVowLTlfXSskLy50ZXN0KHVzZXJuYW1lKSB8fCB1c2VybmFtZS5sZW5ndGggPCAzKSB7XG4gICAgICAgIHVzZXJuYW1lID0gKHVzZXIuZW1haWw/LnNwbGl0KCdAJylbMF0gfHwgJ3VzZXInKVxuICAgICAgICAgIC50b0xvd2VyQ2FzZSgpXG4gICAgICAgICAgLnJlcGxhY2UoL1teYS16MC05X10vZywgJ18nKVxuICAgICAgICAgIC5zdWJzdHJpbmcoMCwgMzApO1xuICAgICAgfVxuXG4gICAgICAvLyBBZGQgcmFuZG9tIHN1ZmZpeCBpZiB1c2VybmFtZSBhbHJlYWR5IGV4aXN0cyAod2UnbGwgaGFuZGxlIGNvbmZsaWN0cylcbiAgICAgIGxldCBmaW5hbFVzZXJuYW1lID0gdXNlcm5hbWU7XG4gICAgICBsZXQgYXR0ZW1wdHMgPSAwO1xuICAgICAgd2hpbGUgKGF0dGVtcHRzIDwgMTApIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBhd2FpdCBTdXBhYmFzZVN0b3JhZ2UuY3JlYXRlVXNlclByb2ZpbGUodXNlci5pZCwgZmluYWxVc2VybmFtZSwgZnVsbE5hbWUpO1xuICAgICAgICAgIGNvbnN0IG5ld1Byb2ZpbGUgPSBhd2FpdCBTdXBhYmFzZVN0b3JhZ2UuZ2V0VXNlclByb2ZpbGUodXNlci5pZCk7XG4gICAgICAgICAgc2V0VXNlclByb2ZpbGUobmV3UHJvZmlsZSk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgICAgICAgLy8gSWYgdXNlcm5hbWUgY29uZmxpY3QsIGFwcGVuZCBudW1iZXJcbiAgICAgICAgICBpZiAoZXJyb3IuY29kZSA9PT0gJzIzNTA1JyAmJiBhdHRlbXB0cyA8IDEwKSB7XG4gICAgICAgICAgICBmaW5hbFVzZXJuYW1lID0gYCR7dXNlcm5hbWV9JHtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDAwKX1gO1xuICAgICAgICAgICAgYXR0ZW1wdHMrKztcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBjcmVhdGUgcHJvZmlsZSBmcm9tIE9BdXRoOicsIGVycm9yKTtcbiAgICB9XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBHZXQgaW5pdGlhbCBzZXNzaW9uXG4gICAgc3VwYWJhc2UuYXV0aC5nZXRTZXNzaW9uKCkudGhlbihhc3luYyAoeyBkYXRhOiB7IHNlc3Npb24gfSB9KSA9PiB7XG4gICAgICBzZXRTZXNzaW9uKHNlc3Npb24pO1xuICAgICAgc2V0VXNlcihzZXNzaW9uPy51c2VyID8/IG51bGwpO1xuICAgICAgXG4gICAgICBpZiAoc2Vzc2lvbj8udXNlcikge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IHByb2ZpbGUgPSBhd2FpdCBsb2FkVXNlclByb2ZpbGUoc2Vzc2lvbi51c2VyLmlkKTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBJZiBubyBwcm9maWxlIGV4aXN0cyBhbmQgdXNlciBoYXMgT0F1dGggbWV0YWRhdGEsIGNyZWF0ZSBwcm9maWxlXG4gICAgICAgICAgaWYgKCFwcm9maWxlKSB7XG4gICAgICAgICAgICBjb25zdCBpc09BdXRoID0gc2Vzc2lvbi51c2VyLmFwcF9tZXRhZGF0YT8ucHJvdmlkZXIgIT09ICdlbWFpbCc7XG4gICAgICAgICAgICBpZiAoaXNPQXV0aCkge1xuICAgICAgICAgICAgICBhd2FpdCBjcmVhdGVQcm9maWxlRnJvbU9BdXRoKHNlc3Npb24udXNlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGxvYWRpbmcgaW5pdGlhbCBzZXNzaW9uOicsIGVycm9yKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgXG4gICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICB9KTtcblxuICAgIC8vIExpc3RlbiBmb3IgYXV0aCBjaGFuZ2VzXG4gICAgY29uc3Qge1xuICAgICAgZGF0YTogeyBzdWJzY3JpcHRpb24gfSxcbiAgICB9ID0gc3VwYWJhc2UuYXV0aC5vbkF1dGhTdGF0ZUNoYW5nZShhc3luYyAoZXZlbnQsIHNlc3Npb24pID0+IHtcbiAgICAgIHNldFNlc3Npb24oc2Vzc2lvbik7XG4gICAgICBzZXRVc2VyKHNlc3Npb24/LnVzZXIgPz8gbnVsbCk7XG4gICAgICBcbiAgICAgIGlmIChzZXNzaW9uPy51c2VyKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gVHJ5IHRvIGxvYWQgZXhpc3RpbmcgcHJvZmlsZVxuICAgICAgICAgIGNvbnN0IHByb2ZpbGUgPSBhd2FpdCBsb2FkVXNlclByb2ZpbGUoc2Vzc2lvbi51c2VyLmlkKTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBJZiBubyBwcm9maWxlIGV4aXN0cyBhbmQgaXQncyBhIG5ldyBPQXV0aCBzaWduLWluLCBjcmVhdGUgb25lXG4gICAgICAgICAgaWYgKCFwcm9maWxlICYmIChldmVudCA9PT0gJ1NJR05FRF9JTicgfHwgZXZlbnQgPT09ICdVU0VSX1VQREFURUQnKSkge1xuICAgICAgICAgICAgLy8gQ2hlY2sgaWYgdGhpcyBpcyBhbiBPQXV0aCBwcm92aWRlciAoaGFzIHVzZXJfbWV0YWRhdGEgd2l0aCBwcm92aWRlcilcbiAgICAgICAgICAgIGNvbnN0IGlzT0F1dGggPSBzZXNzaW9uLnVzZXIuYXBwX21ldGFkYXRhPy5wcm92aWRlciAhPT0gJ2VtYWlsJztcbiAgICAgICAgICAgIGlmIChpc09BdXRoKSB7XG4gICAgICAgICAgICAgIGF3YWl0IGNyZWF0ZVByb2ZpbGVGcm9tT0F1dGgoc2Vzc2lvbi51c2VyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgaGFuZGxpbmcgYXV0aCBzdGF0ZSBjaGFuZ2U6JywgZXJyb3IpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRVc2VyUHJvZmlsZShudWxsKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgc2V0TG9hZGluZyhmYWxzZSk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gKCkgPT4gc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gIH0sIFtdKTtcblxuICBjb25zdCBzaWduSW5XaXRoRW1haWwgPSBhc3luYyAoZW1haWw6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZykgPT4ge1xuICAgIGNvbnN0IHsgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGguc2lnbkluV2l0aFBhc3N3b3JkKHtcbiAgICAgIGVtYWlsLFxuICAgICAgcGFzc3dvcmQsXG4gICAgfSk7XG5cbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvci5tZXNzYWdlKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3Qgc2lnblVwV2l0aEVtYWlsID0gYXN5bmMgKGVtYWlsOiBzdHJpbmcsIHBhc3N3b3JkOiBzdHJpbmcsIHVzZXJuYW1lOiBzdHJpbmcpID0+IHtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZS5hdXRoLnNpZ25VcCh7XG4gICAgICBlbWFpbCxcbiAgICAgIHBhc3N3b3JkLFxuICAgICAgb3B0aW9uczoge1xuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgdXNlcm5hbWUsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgaWYgKGVycm9yKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3IubWVzc2FnZSk7XG4gICAgfVxuXG4gICAgLy8gQ3JlYXRlIHVzZXIgcHJvZmlsZVxuICAgIGlmIChkYXRhLnVzZXIpIHtcbiAgICAgIGF3YWl0IFN1cGFiYXNlU3RvcmFnZS5jcmVhdGVVc2VyUHJvZmlsZShkYXRhLnVzZXIuaWQsIHVzZXJuYW1lKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3Qgc2lnbkluV2l0aE1hZ2ljTGluayA9IGFzeW5jIChlbWFpbDogc3RyaW5nKSA9PiB7XG4gICAgY29uc3QgeyBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2UuYXV0aC5zaWduSW5XaXRoT3RwKHtcbiAgICAgIGVtYWlsLFxuICAgICAgb3B0aW9uczoge1xuICAgICAgICBlbWFpbFJlZGlyZWN0VG86IGAke3dpbmRvdy5sb2NhdGlvbi5vcmlnaW59L2F1dGgvY2FsbGJhY2tgLFxuICAgICAgfSxcbiAgICB9KTtcblxuICAgIGlmIChlcnJvcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yLm1lc3NhZ2UpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBzaWduSW5XaXRoR29vZ2xlID0gYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHsgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGguc2lnbkluV2l0aE9BdXRoKHtcbiAgICAgIHByb3ZpZGVyOiAnZ29vZ2xlJyxcbiAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgcmVkaXJlY3RUbzogYCR7d2luZG93LmxvY2F0aW9uLm9yaWdpbn0vYXV0aC9jYWxsYmFja2AsXG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgaWYgKGVycm9yKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3IubWVzc2FnZSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IHVwZGF0ZUVtYWlsID0gYXN5bmMgKG5ld0VtYWlsOiBzdHJpbmcpID0+IHtcbiAgICBjb25zdCB7IGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZS5hdXRoLnVwZGF0ZVVzZXIoe1xuICAgICAgZW1haWw6IG5ld0VtYWlsLFxuICAgIH0pO1xuXG4gICAgaWYgKGVycm9yKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3IubWVzc2FnZSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IHVwZGF0ZVBhc3N3b3JkID0gYXN5bmMgKG5ld1Bhc3N3b3JkOiBzdHJpbmcpID0+IHtcbiAgICBjb25zdCB7IGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZS5hdXRoLnVwZGF0ZVVzZXIoe1xuICAgICAgcGFzc3dvcmQ6IG5ld1Bhc3N3b3JkLFxuICAgIH0pO1xuXG4gICAgaWYgKGVycm9yKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3IubWVzc2FnZSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IHJlc2V0UGFzc3dvcmQgPSBhc3luYyAoZW1haWw6IHN0cmluZykgPT4ge1xuICAgIGNvbnN0IHsgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGgucmVzZXRQYXNzd29yZEZvckVtYWlsKGVtYWlsLCB7XG4gICAgICByZWRpcmVjdFRvOiBgJHt3aW5kb3cubG9jYXRpb24ub3JpZ2lufS9hdXRoL3Jlc2V0LXBhc3N3b3JkYCxcbiAgICB9KTtcblxuICAgIGlmIChlcnJvcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yLm1lc3NhZ2UpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBzaWduT3V0ID0gYXN5bmMgKCkgPT4ge1xuICAgIGF3YWl0IHN1cGFiYXNlLmF1dGguc2lnbk91dCgpO1xuICAgIHNldFVzZXJQcm9maWxlKG51bGwpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPEF1dGhDb250ZXh0LlByb3ZpZGVyIFxuICAgICAgdmFsdWU9e3sgXG4gICAgICAgIHVzZXIsIFxuICAgICAgICBzZXNzaW9uLCBcbiAgICAgICAgbG9hZGluZywgXG4gICAgICAgIHNpZ25PdXQsIFxuICAgICAgICBzaWduSW5XaXRoRW1haWwsIFxuICAgICAgICBzaWduVXBXaXRoRW1haWwsIFxuICAgICAgICBzaWduSW5XaXRoTWFnaWNMaW5rLFxuICAgICAgICBzaWduSW5XaXRoR29vZ2xlLFxuICAgICAgICB1cGRhdGVFbWFpbCxcbiAgICAgICAgdXBkYXRlUGFzc3dvcmQsXG4gICAgICAgIHJlc2V0UGFzc3dvcmQsXG4gICAgICAgIHVzZXJQcm9maWxlIFxuICAgICAgfX1cbiAgICA+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9BdXRoQ29udGV4dC5Qcm92aWRlcj5cbiAgKTtcbn1cblxuZXhwb3J0IGNvbnN0IHVzZUF1dGggPSAoKSA9PiB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VDb250ZXh0KEF1dGhDb250ZXh0KTtcbiAgaWYgKGNvbnRleHQgPT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFcnJvcigndXNlQXV0aCBtdXN0IGJlIHVzZWQgd2l0aGluIGFuIEF1dGhQcm92aWRlcicpO1xuICB9XG4gIHJldHVybiBjb250ZXh0O1xufTtcbiJdLCJuYW1lcyI6WyJjcmVhdGVDb250ZXh0IiwidXNlQ29udGV4dCIsInVzZUVmZmVjdCIsInVzZVN0YXRlIiwic3VwYWJhc2UiLCJTdXBhYmFzZVN0b3JhZ2UiLCJBdXRoQ29udGV4dCIsInVzZXIiLCJzZXNzaW9uIiwibG9hZGluZyIsInNpZ25PdXQiLCJzaWduSW5XaXRoRW1haWwiLCJzaWduVXBXaXRoRW1haWwiLCJzaWduSW5XaXRoTWFnaWNMaW5rIiwic2lnbkluV2l0aEdvb2dsZSIsInVwZGF0ZUVtYWlsIiwidXBkYXRlUGFzc3dvcmQiLCJyZXNldFBhc3N3b3JkIiwidXNlclByb2ZpbGUiLCJBdXRoUHJvdmlkZXIiLCJjaGlsZHJlbiIsInNldFVzZXIiLCJzZXRTZXNzaW9uIiwic2V0TG9hZGluZyIsInNldFVzZXJQcm9maWxlIiwibG9hZFVzZXJQcm9maWxlIiwidXNlcklkIiwicHJvZmlsZSIsImdldFVzZXJQcm9maWxlIiwiZXJyb3IiLCJjcmVhdGVQcm9maWxlRnJvbU9BdXRoIiwiZXhpc3RpbmdQcm9maWxlIiwiaWQiLCJmdWxsTmFtZSIsInVzZXJfbWV0YWRhdGEiLCJmdWxsX25hbWUiLCJuYW1lIiwiZGlzcGxheV9uYW1lIiwiZW1haWwiLCJzcGxpdCIsInVzZXJuYW1lIiwidG9Mb3dlckNhc2UiLCJyZXBsYWNlIiwibGVuZ3RoIiwicGFkRW5kIiwic3Vic3RyaW5nIiwidGVzdCIsImZpbmFsVXNlcm5hbWUiLCJhdHRlbXB0cyIsImNyZWF0ZVVzZXJQcm9maWxlIiwibmV3UHJvZmlsZSIsImNvZGUiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJjb25zb2xlIiwiYXV0aCIsImdldFNlc3Npb24iLCJ0aGVuIiwiZGF0YSIsImlzT0F1dGgiLCJhcHBfbWV0YWRhdGEiLCJwcm92aWRlciIsInN1YnNjcmlwdGlvbiIsIm9uQXV0aFN0YXRlQ2hhbmdlIiwiZXZlbnQiLCJ1bnN1YnNjcmliZSIsInBhc3N3b3JkIiwic2lnbkluV2l0aFBhc3N3b3JkIiwiRXJyb3IiLCJtZXNzYWdlIiwic2lnblVwIiwib3B0aW9ucyIsInNpZ25JbldpdGhPdHAiLCJlbWFpbFJlZGlyZWN0VG8iLCJ3aW5kb3ciLCJsb2NhdGlvbiIsIm9yaWdpbiIsInNpZ25JbldpdGhPQXV0aCIsInJlZGlyZWN0VG8iLCJuZXdFbWFpbCIsInVwZGF0ZVVzZXIiLCJuZXdQYXNzd29yZCIsInJlc2V0UGFzc3dvcmRGb3JFbWFpbCIsIlByb3ZpZGVyIiwidmFsdWUiLCJ1c2VBdXRoIiwiY29udGV4dCIsInVuZGVmaW5lZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/providers/AuthProvider.tsx\n");

/***/ }),

/***/ "./src/services/supabase-storage.ts":
/*!******************************************!*\
  !*** ./src/services/supabase-storage.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SupabaseStorage: () => (/* binding */ SupabaseStorage)\n/* harmony export */ });\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/supabase */ \"./src/lib/supabase.ts\");\n\nclass SupabaseStorage {\n    // Node operations\n    static async createNode(node) {\n        const nodeId = await this.generateNodeId(node.type);\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"nodes\").insert({\n            id: nodeId,\n            ...node\n        }).select().single();\n        if (error) throw error;\n        // Log activity\n        await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"activity_log\").insert({\n            field_id: node.field_id,\n            user_id: node.author_id,\n            action: \"offered\",\n            node_id: nodeId\n        });\n        return data;\n    }\n    static async getNode(id) {\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"nodes\").select(\"*, author:users(*)\").eq(\"id\", id).single();\n        if (error) throw error;\n        return data;\n    }\n    static async getFieldNodes(fieldId) {\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"nodes\").select(\"*, author:users(*)\").eq(\"field_id\", fieldId).order(\"created_at\", {\n            ascending: false\n        });\n        if (error) throw error;\n        return data;\n    }\n    static async updateNode(id, updates) {\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"nodes\").update(updates).eq(\"id\", id).select().single();\n        if (error) throw error;\n        return data;\n    }\n    static async deleteNode(id) {\n        const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"nodes\").delete().eq(\"id\", id);\n        if (error) throw error;\n    }\n    // Field operations\n    static async createField(field) {\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"fields\").insert(field).select().single();\n        if (error) throw error;\n        // Auto-join creator\n        if (field.created_by) {\n            await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"field_memberships\").insert({\n                field_id: data.id,\n                user_id: field.created_by,\n                role: \"steward\"\n            });\n        }\n        return data;\n    }\n    static async getPublicFields() {\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"fields\").select(\"*, created_by:users(*)\").eq(\"is_public\", true).order(\"created_at\", {\n            ascending: false\n        });\n        if (error) throw error;\n        return data;\n    }\n    static async getField(slug) {\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"fields\").select(\"*, created_by:users(*)\").eq(\"slug\", slug).single();\n        if (error) throw error;\n        return data;\n    }\n    static async getUserFields(userId) {\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"field_memberships\").select(\"field:fields(*), role\").eq(\"user_id\", userId);\n        if (error) throw error;\n        return data.map((item)=>({\n                ...item.field,\n                role: item.role\n            }));\n    }\n    // Activity feed\n    static async getActivityFeed(fieldId, limit = 50) {\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"activity_log\").select(\"*, user:users(*), node:nodes(*)\").eq(\"field_id\", fieldId).order(\"created_at\", {\n            ascending: false\n        }).limit(limit);\n        if (error) throw error;\n        return data;\n    }\n    // Node connections\n    static async createConnection(fromNodeId, toNodeId, relationshipType, userId) {\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"node_connections\").insert({\n            from_node_id: fromNodeId,\n            to_node_id: toNodeId,\n            relationship_type: relationshipType,\n            created_by: userId\n        }).select().single();\n        if (error) throw error;\n        return data;\n    }\n    static async getNodeConnections(nodeId) {\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"node_connections\").select(\"*, from_node:nodes(*), to_node:nodes(*)\").or(`from_node_id.eq.${nodeId},to_node_id.eq.${nodeId}`);\n        if (error) throw error;\n        return data;\n    }\n    // Real-time subscriptions\n    static subscribeToField(fieldId, callback) {\n        return _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.channel(`field:${fieldId}`).on(\"postgres_changes\", {\n            event: \"*\",\n            schema: \"public\",\n            table: \"nodes\",\n            filter: `field_id=eq.${fieldId}`\n        }, callback).on(\"postgres_changes\", {\n            event: \"INSERT\",\n            schema: \"public\",\n            table: \"activity_log\",\n            filter: `field_id=eq.${fieldId}`\n        }, callback).subscribe();\n    }\n    static subscribeToNode(nodeId, callback) {\n        return _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.channel(`node:${nodeId}`).on(\"postgres_changes\", {\n            event: \"*\",\n            schema: \"public\",\n            table: \"nodes\",\n            filter: `id=eq.${nodeId}`\n        }, callback).subscribe();\n    }\n    // Node ID generation (using Supabase counter)\n    static async generateNodeId(type) {\n        const prefix = type === \"raw\" ? \"RN\" : type === \"context\" ? \"CN\" : type === \"support\" ? \"SN\" : \"RF\";\n        // Use Supabase sequence\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.rpc(\"get_next_node_id\", {\n            node_prefix: prefix\n        });\n        if (error) throw error;\n        return `FN-${prefix}.${String(data).padStart(3, \"0\")}`;\n    }\n    // User operations\n    static async createUserProfile(userId, username, displayName) {\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"users\").insert({\n            id: userId,\n            username,\n            display_name: displayName\n        }).select().single();\n        if (error) throw error;\n        return data;\n    }\n    static async getUserProfile(userId) {\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"users\").select(\"*\").eq(\"id\", userId).single();\n        if (error) throw error;\n        return data;\n    }\n    static async updateUserProfile(userId, updates) {\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"users\").update(updates).eq(\"id\", userId).select().single();\n        if (error) throw error;\n        return data;\n    }\n    // Field membership operations\n    static async joinField(fieldId, userId, role = \"contributor\") {\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"field_memberships\").insert({\n            field_id: fieldId,\n            user_id: userId,\n            role\n        }).select().single();\n        if (error) throw error;\n        return data;\n    }\n    static async leaveField(fieldId, userId) {\n        const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"field_memberships\").delete().eq(\"field_id\", fieldId).eq(\"user_id\", userId);\n        if (error) throw error;\n    }\n    static async getFieldMembers(fieldId) {\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"field_memberships\").select(\"*, user:users(*)\").eq(\"field_id\", fieldId);\n        if (error) throw error;\n        return data;\n    }\n    // Search operations\n    static async searchNodes(query, fieldId) {\n        let queryBuilder = _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"nodes\").select(\"*, author:users(*)\").or(`statement.ilike.%${query}%,description.ilike.%${query}%`);\n        if (fieldId) {\n            queryBuilder = queryBuilder.eq(\"field_id\", fieldId);\n        }\n        const { data, error } = await queryBuilder.order(\"created_at\", {\n            ascending: false\n        });\n        if (error) throw error;\n        return data;\n    }\n    static async searchFields(query) {\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"fields\").select(\"*, created_by:users(*)\").or(`name.ilike.%${query}%,description.ilike.%${query}%`).eq(\"is_public\", true).order(\"created_at\", {\n            ascending: false\n        });\n        if (error) throw error;\n        return data;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/services/supabase-storage.ts\n");

/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (() => {



/***/ }),

/***/ "@supabase/supabase-js":
/*!****************************************!*\
  !*** external "@supabase/supabase-js" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@supabase/supabase-js");

/***/ }),

/***/ "next/head":
/*!****************************!*\
  !*** external "next/head" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/head");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/_app.tsx"));
module.exports = __webpack_exports__;

})();